<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0520.1026                               -->
<workbook original-version='18.1' source-build='2025.1.2 (20251.25.0520.1026)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ESGSeries-Time (Multiple Connections)' inline='true' name='federated.19vmihf0bd9vho1flag0n19olu12' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ESGCountry-Series-cleaned' name='excel-direct.13m0n4w02h0gns1337d370wrth61'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/HP/OneDrive/Documents/ESGCountry-Series-cleaned.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='ESGSeries_Cleaned' name='excel-direct.157pdlz1behc9f1d12uxl18v1x2i'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/HP/OneDrive/Documents/ESGSeries_Cleaned.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='ESGFootNote' name='excel-direct.073ta121ir9enp15ncpfl0rdm15t'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/HP/OneDrive/Documents/ESGFootNote.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='ESGCountry_cleaned' name='excel-direct.04m350l0uhy9m012qou9715dtkcu'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/HP/OneDrive/Documents/ESGCountry_cleaned.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='ESGData_Reshaped' name='excel-direct.0lpjdbw003btp31fhfsxe0ogwlgi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/HP/OneDrive/Documents/ESGData_Reshaped.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='ESGSeries-Time cleaned.csv' name='excel-direct.17ksbrz0hzpt9t1bajft80ewm083'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/HP/OneDrive/Documents/ESGSeries-Time cleaned.csv.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0lpjdbw003btp31fhfsxe0ogwlgi' name='ESGData_Reshaped' table='[ESGData_Reshaped$]' type='table'>
          <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Indicator Name' ordinal='2' />
            <column datatype='string' name='Indicator Code' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
            <column datatype='real' name='ESG Value' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ESGData_Reshaped]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F10001:no:A1:F10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[ESGData_Reshaped]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[ESGData!Reshaped_B07E35E0679C4D8794C726F1460B9CF1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[ESGData_Reshaped]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[ESGData!Reshaped_B07E35E0679C4D8794C726F1460B9CF1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Indicator Name]</local-name>
            <parent-name>[ESGData_Reshaped]</parent-name>
            <remote-alias>Indicator Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[ESGData!Reshaped_B07E35E0679C4D8794C726F1460B9CF1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Indicator Code]</local-name>
            <parent-name>[ESGData_Reshaped]</parent-name>
            <remote-alias>Indicator Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[ESGData!Reshaped_B07E35E0679C4D8794C726F1460B9CF1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[ESGData_Reshaped]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[ESGData!Reshaped_B07E35E0679C4D8794C726F1460B9CF1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ESG Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ESG Value]</local-name>
            <parent-name>[ESGData_Reshaped]</parent-name>
            <remote-alias>ESG Value</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[ESGData!Reshaped_B07E35E0679C4D8794C726F1460B9CF1]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Indicator Code]' role='dimension' type='nominal' />
      <column datatype='string' name='[Indicator Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='ESGData_Reshaped' datatype='table' name='[__tableau_internal_object_id__].[ESGData!Reshaped_B07E35E0679C4D8794C726F1460B9CF1]' role='measure' type='quantitative' />
      <column-instance column='[Indicator Code]' derivation='None' name='[none:Indicator Code:nk]' pivot='key' type='nominal' />
      <column-instance column='[Indicator Name]' derivation='None' name='[none:Indicator Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country Name)' hidden='true' name='[Action (Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/HP/AppData/Local/Temp/TableauTemp/#TableauTemp_0d3697z1qyzd0q14mjcay02wwdk2.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/19/2025 05:45:03 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Name</remote-alias>
              <ordinal>0</ordinal>
              <family>ESGData_Reshaped</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>239</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[ESGData!Reshaped_B07E35E0679C4D8794C726F1460B9CF1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country Code</remote-alias>
              <ordinal>1</ordinal>
              <family>ESGData_Reshaped</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>239</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[ESGData!Reshaped_B07E35E0679C4D8794C726F1460B9CF1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator Name</remote-alias>
              <ordinal>2</ordinal>
              <family>ESGData_Reshaped</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>108</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[ESGData!Reshaped_B07E35E0679C4D8794C726F1460B9CF1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Indicator Code</remote-alias>
              <ordinal>3</ordinal>
              <family>ESGData_Reshaped</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>108</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[ESGData!Reshaped_B07E35E0679C4D8794C726F1460B9CF1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>4</ordinal>
              <family>ESGData_Reshaped</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ESGData!Reshaped_B07E35E0679C4D8794C726F1460B9CF1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ESG Value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ESG Value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ESG Value</remote-alias>
              <ordinal>5</ordinal>
              <family>ESGData_Reshaped</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>117994</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ESGData!Reshaped_B07E35E0679C4D8794C726F1460B9CF1]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Indicator Code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;EG.ELC.RNEW.ZS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IP.PAT.RESD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SI.DST.FRST.20&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AG.LND.AGRI.ZS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EN.POP.DNST&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SE.XPD.TOTL.GB.ZS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SP.POP.65UP.TO.ZS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EG.CFT.ACCS.ZS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GE.EST&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SH.H2O.SMDW.ZS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EG.USE.PCAP.KG.OE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NY.ADJ.DRES.GN.ZS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SL.TLF.0714.ZS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EG.FEC.RNEW.ZS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IT.NET.USER.ZS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SI.POV.GINI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EG.EGY.PRIM.PP.KD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IC.BUS.EASE.XQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SH.MED.BEDS.ZS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;EN.CLC.MDAT.ZS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SE.ENR.PRSC.FM.ZS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SP.DYN.LE00.IN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AG.LND.FRST.ZS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ER.H2O.FWTL.ZS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SG.GEN.PARL.ZS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SP.UWT.TFRT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EN.ATM.PM25.MC.M3&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RQ.EST&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SM.POP.NETM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EG.ELC.ACCS.ZS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IC.LGL.CRED.XQ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SH.STA.OWAD.ZS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EN.ATM.CO2E.PC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NY.GDP.MKTP.KD.ZG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SL.TLF.ACTI.ZS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EN.ATM.METH.PC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PV.EST&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SL.TLF.CACT.FM.ZS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EN.CLC.GHGR.MT.CE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SE.ADT.LITR.ZS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SN.ITK.DEFC.ZS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EN.MAM.THRD.NO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SE.PRM.ENRR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SP.DYN.TFRT.IN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EG.IMP.CONS.ZS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NV.AGR.TOTL.ZS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SI.POV.NAHC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EG.ELC.COAL.ZS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IP.JRN.ARTC.SC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SH.STA.SMSS.ZS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AG.PRD.FOOD.XD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ER.PTD.TOTL.ZS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SH.DTH.COMM.ZS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VA.EST&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EN.ATM.NOXE.PC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RL.EST&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SL.UEM.TOTL.ZS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EG.USE.COMM.FO.ZS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NY.ADJ.DFOR.GN.ZS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SI.SPR.PCAP.ZG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CC.EST&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GB.XPD.RSDV.GD.ZS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SH.DYN.MORT&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Indicator Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cause of death, by communicable diseases and maternal, prenatal and nutrition conditions (\% of total)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Income share held by lowest 20\%&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Proportion of seats held by women in national parliaments (\%)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Access to clean fuels and technologies for cooking (\% of population)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Forest area (\% of land area)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;People using safely managed sanitation services (\% of population)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Unemployment, total (\% of total labor force) (modeled ILO estimate)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Agricultural land (\% of land area)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gini index (World Bank estimate)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Population density (people per sq. km of land area)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Droughts, floods, extreme temperatures (\% of population, average 1990-2009)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Literacy rate, adult total (\% of people ages 15 and above)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Renewable energy consumption (\% of total final energy consumption)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Children in employment, total (\% of children ages 7-14)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Individuals using the Internet (\% of population)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ratio of female to male labor force participation rate (\%) (modeled ILO estimate)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Agriculture, forestry, and fishing, value added (\% of GDP)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Government Effectiveness: Estimate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poverty headcount ratio at national poverty lines (\% of population)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fertility rate, total (births per woman)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Patent applications, residents&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Strength of legal rights index (0=weak to 12=strong)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Access to electricity (\% of population)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fossil fuel energy consumption (\% of total)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PM2.5 air pollution, mean annual exposure (micrograms per cubic meter)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Unmet need for contraception (\% of married women ages 15-49)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Energy intensity level of primary energy (MJ/$2011 PPP GDP)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Net migration&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;School enrollment, primary and secondary (gross), gender parity index (GPI)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Annual freshwater withdrawals, total (\% of internal resources)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Government expenditure on education, total (\% of government expenditure)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prevalence of overweight (\% of adults)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ease of doing business index (1=most business-friendly regulations)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mammal species, threatened&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Research and development expenditure (\% of GDP)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Electricity production from coal sources (\% of total)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Methane emissions (metric tons of CO2 equivalent per capita)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rule of Law: Estimate&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Energy use (kg of oil equivalent per capita)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nitrous oxide emissions (metric tons of CO2 equivalent per capita)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Scientific and technical journal articles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Food production index (2004-2006 = 100)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;People using safely managed drinking water services (\% of population)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Terrestrial and marine protected areas (\% of total territorial area)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CO2 emissions (metric tons per capita)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labor force participation rate, total (\% of total population ages 15-64) (modeled ILO estimate)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Regulatory Quality: Estimate&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Annualized average growth rate in per capita real survey mean consumption or income, total population (\%)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hospital beds (per 1,000 people)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prevalence of undernourishment (\% of population)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adjusted savings: natural resources depletion (\% of GNI)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GDP growth (annual \%)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Political Stability and Absence of Violence/Terrorism: Estimate&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Voice and Accountability: Estimate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Energy imports, net (\% of energy use)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mortality rate, under-5 (per 1,000 live births)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;School enrollment, primary (\% gross)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Control of Corruption: Estimate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Life expectancy at birth, total (years)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Renewable electricity output (\% of total electricity output)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adjusted savings: net forest depletion (\% of GNI)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GHG net emissions/removals by LUCF (Mt of CO2 equivalent)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Population ages 65 and above (\% of total population)&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='ESGData_Reshaped' id='ESGData!Reshaped_B07E35E0679C4D8794C726F1460B9CF1'>
            <properties context=''>
              <relation connection='excel-direct.0lpjdbw003btp31fhfsxe0ogwlgi' name='ESGData_Reshaped' table='[ESGData_Reshaped$]' type='table'>
                <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country Name' ordinal='0' />
                  <column datatype='string' name='Country Code' ordinal='1' />
                  <column datatype='string' name='Indicator Name' ordinal='2' />
                  <column datatype='string' name='Indicator Code' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='real' name='ESG Value' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_89B477FECB2C46DFB3858EF4E14E2C57]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='ESG dashboard' type='sheet' worksheet='Map view' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='ESG dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_F8F1211A5B0441C7A0A4D0AF93D15CEB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='ESG dashboard' type='sheet' worksheet='Trend overtime' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='ESG dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_6B5D075EC6A7401CAADF3D83B8595AA9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='ESG dashboard' type='sheet' worksheet='Country comparison' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='ESG dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_E573633BD6A145DBBF7DCE33A399B74A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='ESG dashboard' type='sheet' worksheet='KPI summary' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='ESG dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Country comparison'>
      <table>
        <view>
          <datasources>
            <datasource caption='ESGSeries-Time (Multiple Connections)' name='federated.19vmihf0bd9vho1flag0n19olu12' />
          </datasources>
          <datasource-dependencies datasource='federated.19vmihf0bd9vho1flag0n19olu12'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[ESG Value]' role='measure' type='quantitative' />
            <column datatype='string' name='[Indicator Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator Name]' derivation='None' name='[none:Indicator Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ESG Value]' derivation='Sum' name='[sum:ESG Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19vmihf0bd9vho1flag0n19olu12].[Action (Year)]'>
            <groupfilter function='member' level='[none:Year:ok]' member='1997' user:ui-action-filter='[Action2_F8F1211A5B0441C7A0A4D0AF93D15CEB]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]'>
            <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]'>
            <groupfilter function='member' level='[none:Indicator Name:nk]' member='&quot;CO2 emissions (metric tons per capita)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]' included-values='all' />
          <slices>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]</column>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]</column>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]</column>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.19vmihf0bd9vho1flag0n19olu12].[sum:ESG Value:qk]</rows>
        <cols>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{DD177EFB-0E9E-4856-9EC0-B6E89B8E061D}' />
    </worksheet>
    <worksheet name='KPI summary'>
      <table>
        <view>
          <datasources>
            <datasource caption='ESGSeries-Time (Multiple Connections)' name='federated.19vmihf0bd9vho1flag0n19olu12' />
          </datasources>
          <datasource-dependencies datasource='federated.19vmihf0bd9vho1flag0n19olu12'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[ESG Value]' role='measure' type='quantitative' />
            <column datatype='string' name='[Indicator Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator Name]' derivation='None' name='[none:Indicator Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ESG Value]' derivation='Sum' name='[sum:ESG Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19vmihf0bd9vho1flag0n19olu12].[Action (Year)]'>
            <groupfilter function='member' level='[none:Year:ok]' member='1997' user:ui-action-filter='[Action2_F8F1211A5B0441C7A0A4D0AF93D15CEB]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]'>
            <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]'>
            <groupfilter function='member' level='[none:Indicator Name:nk]' member='&quot;CO2 emissions (metric tons per capita)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]' included-values='all' />
          <slices>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]</column>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]</column>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]</column>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19vmihf0bd9vho1flag0n19olu12].[sum:ESG Value:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='48'>&lt;</run>
                <run fontsize='48'>[federated.19vmihf0bd9vho1flag0n19olu12].[sum:ESG Value:qk]</run>
                <run fontsize='48'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A80E62C6-F5EA-46F3-9835-74DA91848166}' />
    </worksheet>
    <worksheet name='Map view'>
      <table>
        <view>
          <datasources>
            <datasource caption='ESGSeries-Time (Multiple Connections)' name='federated.19vmihf0bd9vho1flag0n19olu12' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.19vmihf0bd9vho1flag0n19olu12'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[ESG Value]' role='measure' type='quantitative' />
            <column datatype='string' name='[Indicator Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator Name]' derivation='None' name='[none:Indicator Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ESG Value]' derivation='Sum' name='[sum:ESG Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19vmihf0bd9vho1flag0n19olu12].[Action (Year)]'>
            <groupfilter function='member' level='[none:Year:ok]' member='1997' user:ui-action-filter='[Action2_F8F1211A5B0441C7A0A4D0AF93D15CEB]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Arab World&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bahamas, The&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Brunei Darussalam&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cabo Verde&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Caribbean small states&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chad&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo, Dem. Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Congo, Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Early-demographic dividend&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;East Asia &amp; Pacific (excluding high income)&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD)&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Egypt, Arab Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Euro area&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Europe &amp; Central Asia (excluding high income)&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD)&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;European Union&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Fragile and conflict affected situations&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Gambia, The&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Heavily indebted poor countries (HIPC)&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;High income&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IBRD only&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA &amp; IBRD total&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA blend&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA only&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;IDA total&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iran, Islamic Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea, Dem. People&apos;s Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Korea, Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Kyrgyz Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lao PDR&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Late-demographic dividend&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latin America &amp; Caribbean (excluding high income)&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latin America &amp; Caribbean (IDA &amp; IBRD)&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Least developed countries: UN classification&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Libya&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Low &amp; middle income&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Low income&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Lower middle income&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Micronesia, Fed. Sts.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle East &amp; North Africa (excluding high income)&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle East &amp; North Africa (IDA &amp; IBRD)&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Middle income&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Moldova&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nauru&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;North Macedonia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;OECD members&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Other small states&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pacific island small states&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Palau&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Post-demographic dividend&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Pre-demographic dividend&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sao Tome and Principe&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovak Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Small states&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Asia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Lucia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sub-Saharan Africa (excluding high income)&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD)&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Syrian Arab Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tanzania&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Tuvalu&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Upper middle income&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Venezuela, RB&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;World&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Yemen, Rep.&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]'>
            <groupfilter function='member' level='[none:Indicator Name:nk]' member='&quot;CO2 emissions (metric tons per capita)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]' included-values='all' />
          <slices>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]</column>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]</column>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]</column>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19vmihf0bd9vho1flag0n19olu12].[Longitude (generated)]' field-type='quantitative' max='19811301.57152278' min='-5548669.9248198625' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.19vmihf0bd9vho1flag0n19olu12].[Latitude (generated)]' field-type='quantitative' max='12053813.985686835' min='-12053813.985686835' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19vmihf0bd9vho1flag0n19olu12].[sum:ESG Value:qk]' />
              <lod column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]' />
              <geometry column='[federated.19vmihf0bd9vho1flag0n19olu12].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.19vmihf0bd9vho1flag0n19olu12].[Latitude (generated)]</rows>
        <cols>[federated.19vmihf0bd9vho1flag0n19olu12].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D73D9C10-4CF9-4814-8602-7388BEC758B9}' />
    </worksheet>
    <worksheet name='Trend overtime'>
      <table>
        <view>
          <datasources>
            <datasource caption='ESGSeries-Time (Multiple Connections)' name='federated.19vmihf0bd9vho1flag0n19olu12' />
          </datasources>
          <datasource-dependencies datasource='federated.19vmihf0bd9vho1flag0n19olu12'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[ESG Value]' role='measure' type='quantitative' />
            <column datatype='string' name='[Indicator Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator Name]' derivation='None' name='[none:Indicator Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ESG Value]' derivation='Sum' name='[sum:ESG Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]'>
            <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]'>
            <groupfilter function='member' level='[none:Indicator Name:nk]' member='&quot;CO2 emissions (metric tons per capita)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]</column>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.19vmihf0bd9vho1flag0n19olu12].[sum:ESG Value:qk]</rows>
        <cols>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{E8916D29-B5E0-4FE5-98C0-82293E93BA6D}' />
    </worksheet>
    <worksheet name='pie chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='ESGSeries-Time (Multiple Connections)' name='federated.19vmihf0bd9vho1flag0n19olu12' />
          </datasources>
          <datasource-dependencies datasource='federated.19vmihf0bd9vho1flag0n19olu12'>
            <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[ESG Value]' role='measure' type='quantitative' />
            <column datatype='string' name='[Indicator Code]' role='dimension' type='nominal' />
            <column datatype='string' name='[Indicator Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Code]' derivation='None' name='[none:Country Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator Code]' derivation='None' name='[none:Indicator Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator Name]' derivation='None' name='[none:Indicator Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ESG Value]' derivation='Sum' name='[sum:ESG Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Code:nk]'>
            <groupfilter function='member' level='[none:Country Code:nk]' member='&quot;AUS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]'>
            <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Australia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Code:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Indicator Code:nk]' member='&quot;AG.LND.AGRI.ZS&quot;' />
              <groupfilter function='member' level='[none:Indicator Code:nk]' member='&quot;EN.ATM.CO2E.PC&quot;' />
              <groupfilter function='member' level='[none:Indicator Code:nk]' member='&quot;ER.H2O.FWTL.ZS&quot;' />
              <groupfilter function='member' level='[none:Indicator Code:nk]' member='&quot;NY.ADJ.DFOR.GN.ZS&quot;' />
              <groupfilter function='member' level='[none:Indicator Code:nk]' member='&quot;SH.DTH.COMM.ZS&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Indicator Name:nk]' member='&quot;Adjusted savings: net forest depletion (\% of GNI)&quot;' />
              <groupfilter function='member' level='[none:Indicator Name:nk]' member='&quot;Agricultural land (\% of land area)&quot;' />
              <groupfilter function='member' level='[none:Indicator Name:nk]' member='&quot;Annual freshwater withdrawals, total (\% of internal resources)&quot;' />
              <groupfilter function='member' level='[none:Indicator Name:nk]' member='&quot;Cause of death, by communicable diseases and maternal, prenatal and nutrition conditions (\% of total)&quot;' />
              <groupfilter function='member' level='[none:Indicator Name:nk]' member='&quot;CO2 emissions (metric tons per capita)&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]' included-values='in-range'>
            <min>2013</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Code:nk]</column>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]</column>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]</column>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Code:nk]</column>
            <column>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Code:nk]' />
              <wedge-size column='[federated.19vmihf0bd9vho1flag0n19olu12].[sum:ESG Value:qk]' />
              <size column='[federated.19vmihf0bd9vho1flag0n19olu12].[sum:ESG Value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.637182354927063' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B3F7AC44-C198-402E-825B-11AEBB436EB3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='ESG dashboard'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <datasources>
        <datasource caption='ESGSeries-Time (Multiple Connections)' name='federated.19vmihf0bd9vho1flag0n19olu12' />
      </datasources>
      <datasource-dependencies datasource='federated.19vmihf0bd9vho1flag0n19olu12'>
        <column datatype='string' name='[Indicator Name]' role='dimension' type='nominal' />
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Indicator Name]' derivation='None' name='[none:Indicator Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97858' id='13' param='vert' type-v2='layout-flow' w='97538' x='1231' y='1071'>
            <zone h='7764' id='14' type-v2='title' w='97538' x='1231' y='1071'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90094' id='7' param='horz' type-v2='layout-flow' w='97538' x='1231' y='8835'>
              <zone h='90094' id='5' type-v2='layout-basic' w='51230' x='1231' y='8835'>
                <zone h='50066' id='3' name='Map view' w='51230' x='1231' y='8835'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='40028' id='9' name='Trend overtime' w='51230' x='1231' y='58901'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='301' h='90094' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='46308' x='52461' y='8835'>
                <zone h='10843' id='8' name='Map view' pane-specification-id='0' param='[federated.19vmihf0bd9vho1flag0n19olu12].[sum:ESG Value:qk]' type-v2='color' w='46308' x='52461' y='8835'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='35878' id='10' name='Country comparison' w='46308' x='52461' y='19678'>
                  <layout-cache cell-count-w='232' minheight='227' non-cell-size-w='78' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='26506' id='11' name='KPI summary' w='46308' x='52461' y='55556'>
                  <layout-cache fixed-size-h='190' fixed-size-w='280' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='59' h='8969' id='15' is-fixed='true' name='Map view' param='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]' type-v2='filter' values='database' w='46308' x='52461' y='82062'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7898' id='16' name='Map view' param='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]' type-v2='filter' values='database' w='46308' x='52461' y='91031'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97858' id='19' param='vert' type-v2='layout-flow' w='97538' x='1231' y='1071'>
                <zone h='7764' id='14' type-v2='title' w='97538' x='1231' y='1071'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='59' h='8969' id='15' mode='checkdropdown' name='Map view' param='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]' type-v2='filter' values='database' w='46308' x='52461' y='82062'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7898' id='16' name='Map view' param='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]' type-v2='filter' values='database' w='46308' x='52461' y='91031'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50066' id='3' is-fixed='true' name='Map view' w='51230' x='1231' y='8835'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10843' id='8' name='Map view' pane-specification-id='0' param='[federated.19vmihf0bd9vho1flag0n19olu12].[sum:ESG Value:qk]' type-v2='color' w='46308' x='52461' y='8835'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35878' id='10' is-fixed='true' name='Country comparison' w='46308' x='52461' y='19678'>
                  <layout-cache cell-count-w='232' minheight='227' non-cell-size-w='78' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='220' h='26506' id='11' is-fixed='true' name='KPI summary' w='46308' x='52461' y='55556'>
                  <layout-cache fixed-size-h='190' fixed-size-w='280' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40028' id='9' is-fixed='true' name='Trend overtime' w='51230' x='1231' y='58901'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CF6009DF-C12B-4753-B324-050ACE464EEF}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Map view'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.19vmihf0bd9vho1flag0n19olu12].[sum:ESG Value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]</field>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]</field>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2DF671AE-5CA5-478C-9C6E-B4304438764D}' />
    </window>
    <window class='worksheet' name='Trend overtime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]</field>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]</field>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FFE03217-F685-42B8-BC9A-3AE84B11822B}' />
    </window>
    <window class='worksheet' name='Country comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]</field>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]</field>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61F5A6A0-FDF9-402D-9ADB-4F17497EAE53}' />
    </window>
    <window class='worksheet' name='KPI summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]</field>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Name:nk]</field>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{565FB67C-96C5-4BE4-9498-3B08E49D6622}' />
    </window>
    <window class='worksheet' name='pie chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Code:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.19vmihf0bd9vho1flag0n19olu12].[sum:ESG Value:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Code:nk]</field>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Country Name:nk]</field>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Indicator Code:nk]</field>
            <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8629F52D-364C-4F1A-AC15-CEECA39F9769}' />
    </window>
    <window class='dashboard' maximized='true' name='ESG dashboard'>
      <viewpoints>
        <viewpoint name='Country comparison'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI summary' />
        <viewpoint name='Map view'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trend overtime'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.19vmihf0bd9vho1flag0n19olu12].[sum:ESG Value:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.19vmihf0bd9vho1flag0n19olu12].[none:Year:qk]</field>
                    <field>[federated.19vmihf0bd9vho1flag0n19olu12].[sum:ESG Value:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>1997</value>
                  <value>1010.4018430975681</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0FDB6AF3-8F9A-466A-BEE2-DC944202B9E1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Country comparison' width='192'>
      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
      wBJe4n8jrf4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ESG dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d3Qc13n//ZnZXrEVvTeCAHsvoorVLctyTeIeJ7LsOLaT/JKcJL/3fU8S
      x4kT99iOu2zFRZYtuUiyZUmWrEZJpMROAkTvbQFs77szc98/FgAJEWCFRBV8z8HB7pR778w+
      z71Pv5IQQrCCFbwBIUmSJF/uQaxgBZcTKwywgjc0VhhgBW9orDDACt7QWGGAFbyhscIAK3hD
      Q7/YwfhUP1/71k+QDHOnJW54+/vZ3FJJaGKQ+x98iEA4TkVNEzfccD0lHkfhvuAED/7mIYYn
      pnH7y7jq2htoqS1bsvPBg4/xQtDNH92w+YIGPdH1PHsHDbz7xi0vOZPm61/9EZ/41B0X1N7F
      YN9DPyJdfS3XrCl/2ftawcuHRRkgE5/BULyav//YuxYc17IRvvjf3+WOv/k7qvxO+k8epadv
      kBLPWmKBPj77lbv44B0f5z21pQQnRzjcPXhWBlDVPLmccsGD1lSFbF5a9Fwmk73g9i4GSj5L
      XtFekb5W8PJhUQZYCtnQGHJJEzUlbgAa2zbRCIDggXt/zjv+7C9ZXVcKgK+smuvLqs9oI5+O
      89CDv6J7eBorKZwtNwAQGO7h0cf+wGQwTtPabdxywx4MssTMWB+/vP+3JLKwedfV7Nm2DgAt
      l+b3D97H0a4hNl1xA2/asRYANZ/m0ft/xrHeMbZeeSNXbmlDkkDJxPnNr39J71iIzVdcy9Xb
      1iJJElMjfTz62ONMzMRoXLOFt9xwFQadxL5nn6J10y46nnuY3qiJ973jBtLRae7/1a8ZCyVQ
      Y+NsrLnpIl/7Cl4tWFIHyCQTTE1NFf6mp8nmVcwlzfiTPXz9zh8zMBpAm3Mia3kGAylW15QA
      EIuEmJqaIhyNL2hTU7N8/Yufw924jb/560+xcdUpBolEY1x50zv4m7/+FLqpI/zisUMILc83
      v3UnN7/7g/zlRz+MVc6jzXa5f++TFDdv5lOf+BjPP/BDptKF4xNDfZSv2c0n/uJ2Ov5wD08c
      GUBoeb7x5S/ga9nJpz7xUYLHHuW+J44CEI1F2X3D2/ibv/4U5lA7P3vkBQA6Thzhoft+xLjm
      44/eei1qJsrnP/dl2nbfxF9/8i9prPAuyw+wgsuLJRlgqPsYDzzwwPzfeCiJJBv45P/9V960
      qZEHf34X//Jv/8VQIApCoGoSslwQSw49/wfu/+V9/MsXv7mgzejYSdSSDezZ1IJeb6CkpJg5
      QaZ5zSZscpbOzi58FZWMD40CMnYTHDp0lGAiz5Ytm9HPjnjnm25m/ao6jGYbVcUWUrOST2Xj
      GtY0VGK2Onnv+9/DgX3PkpgZJG2tZ/eGZowmK+/88F9w9KmHAGhs3YhDn6ezs4ui8kqmhkYK
      DWVi2Gs3847rd2LU6xg8upeanbeyrqkKvcFISbFv2X6EFVw+LCkCrdq4i9tvf9cZxyVZT+vG
      HazesJ1A7yG++aOf8S9/ezsOs0YokcHqMnP1ze9iTybGZ/77ewvuzcTC2L1+zpTeBT//7peY
      krzUlflIhSYRVCDJOv7yb/8vL+5/jl//9AdMZy38w//52Hk/nNFkQVHzKNkkZkvRfL+S3oos
      ZQHBL7//34wqRdRX+ElHJxHMzuyWIraua5lvKxqK4fc1nXffK3ht4ILMoJlEhGA0CYAkSVgd
      TvQ6CSSZ66/awk/uuR9FWzq2rqislonOo/PXpFOzcotI0jmq8YmP/Clvectb2LGxFQkQmkI6
      B7uvvoGP/9X/oVYfYzSaPq+xCiHY/8wTNK5ah8NXQ2jsOMmcCsBU74uYvc1AnhMjCT710Q9z
      6y23sGNT25IvpLKhlvajRwpinxCkUuc3jhW8urHkCnDs+cf4fHxg9pvEdW99D6v8gju/9QMU
      2YBRpyOvSrzng3+GBKy54i1MzPyUT3/60zhsVjQ1T03TQjOlxVPDFS1O/uVf/w2v20k+GqBs
      cwVINtbUm/i3z/wnDpsJqwkw1COEwn3/+02m0wIJDbO7imqXhenA0g+UCPTzpS99kWwmjc3f
      wB23bkSvl/iTW3bz+c/+O1aLiXRe5mOf+CRgYEODm09/5rM4bWYsFglB5aLtFjdupfbpF/j0
      Z/4Dl8NOaKyHK1Zf2MtewasP0mLh0EJoqIrK6Sd0Oj2yLCGEQFULM6ms0yFL0mn3CYSmoWoa
      sqxDlmUk6aVtCzRVRSChkyUEIMvyfLuSJCHLMpom0OnkBf3pdDokSUIIDSEK9wFoqook65Ak
      gaYJNE1bcP0cNFVFE2LBuOfblyR0p/VbaFNecP/pY5QkCSRpwfOv4LUFSZKkRRlgBSt4I2Al
      H2AFb3isMMAK3tBYYYAVvKGxwgAreENjhQFW8IbGCgOs4A2NFQZ4FUJTsgwPDzM8PEwqqxCP
      hhgbn0TRBEJTmRwfYyYURQjIZ1LEU4WwjmgkwulG7b6u48Qy6mV7jtcCVhjgVYjcVBef/8Zd
      PPPMM4xPDPHN//kujz36MH2j09z7g2/wwO9+z8OP/YG8BunQEPf99knUTIy7732ATDLCoYOH
      iKVynDj0POFEmvHJGVKxGWZiaaLBSdq7+k9F8r7BcQYDZFJJEsmFcS6ZdJJ4cvliX7qOvUj8
      lclbec0iGppheHgYDHYkNYlmclHlkhhX3bzzpivxeDxICBxljaSmBpnoP0F50wZG+rvp6TzK
      9+++v9BQPsIjf9jHeOcLvNA5wHe/dScHn7ifZ9vHLu8DvkpwBgP86s6v82///W3y8xOExp1f
      /08+99/fX7ZO3b4SDLpla+51iStufhf/9E//RK3fwZ9/8u9Y583wwPNd5CNTKHorxw/tI5PX
      kCQDtW49v322g00bVtHR0UVtUwNqJjPflqKoZNJpUBKE4iqV9c2YRP4yPt2rB4uIQHa2tXrp
      HA0DkA4Ooy9pxWUonB3sPMzXvvJFvvDlr9E7FgTgud8/wm9/cy+f+9wX2He895QcqmV55NEn
      5ls+/PyTBFMKo309ZDRACI4+/zhf+Nzn+O0TLyAE7H38MZKKBkLjZ9//H8ajhR/qicceQ3mD
      rNo6cxGjR5/gs5/9LCeHJvn5D+/kyZNB9mzZwLtuuYL/vesu7P4aTIbCz7friu2k5SIqXSbK
      i4t44VAnNbWVlFXWYrW50cX6eLZjkhJ/NW/a0cCBo53YHbbL/JSvEoiX4O6vfl0MTfaIH/zs
      d0ITQuz9zU/Fwd5B8YXPfV0IIcT4cL+IJjMikwiJL3z5G0ITQnz/C/8uXuwZEblMQnzls/8m
      hkOp+fZ+8PUviemUKoSWF9/4+jeFIoT45fe+KsZSQkx27RPf+slvRU7Ji0fv+Y7Y2zEuXvjd
      j8VT7ZMiExwQX/3Cf4pfPH5ECCUhvv6NO1861BWs4JIAS4RD24vrUMJ/IJfP0zWe4L03eJmb
      x6dGenn47p+jaRqjUxnygN5YRHNjJQbgul1r6BsNUuUuhBVfe8V6nnz+BNfUZnHVbeR0yef4
      4UOMDaX4n691oyRnsMsn+fC127nrdwfx1kjsuPU9tO97jqmeBKWrt76M08BrH+l0kngsermH
      8bLBaDThci9/Guri+QCSjk0NXva+8AJmfwMm3VzIr8KT+zv427/7e3Sy4Btf+caC24QQDI1O
      UV13anmtWLOLwLd+yJNjMte87UMLrnc4HFxzyy3saPIXupV1mEwG1MgjdBk83Litgv79GZ7Y
      f5Jdb1947woWYmomQD95cqqGognymkBRNRQNFE2gaAJVEyjq7GfB/OeF5zUUIVBVyGsaiqah
      qoK8BoqmkVcFilZoV1M1VE2gqRpCE6iahlDn/mugCVBV0DRQBZx2XGgaqKe+a6o2e12hLTQV
      oQoQhWv+5Mp6PvWBty/7e1syIWb9rj38zV/9v3zqP74C85kBejymHN/53p1IQmVoujDj5DIz
      /Oh7dyJlEmi2cm6sdM+3I+tM1BTlORy08na7YUEfG6+8kS99+Zt0l5ShZFNsuPIWdq9vpMKu
      0h3RYTXqWFXt5fuPdfJuxwUVsHhdIBGZIZhUqa4omU3nFEyNjyJZivC7nSAEgcAkvpIykAoT
      iCQkQCBJGoi5iUsAopCvIWsIKORNSKf/gSZphf9CoEoCTZLRAFUSqAhUZFRJoAAKAg0ZFQ0N
      CQ0K/wWoQir0LcTsf2luCIjChQhtkc/q3HeBUJllFAGqQNMK5XAG+3vJqVDkKabEY2NgaIyq
      mlqMs8ni6XiEyXCS2qoKJAni4Wkwu3BYFtLeHM7IB0gnkpjsNmQgFo3iKCoCoZFMprHbbWhK
      nlAkit1RhJrPYbXb+PFXv8Y1H3gfFmTcrqIzkkRymRQ5TcZuNRf6SCYwWu3opEJ9nUg0htFs
      w2G3IgG5dIqcKFyv5rMk0nmcTvsiucSvX6jZGI88eYAanxHJ00xrXTHBkS7aJ7JokVE2XHkT
      UmSQe371FO+9/cOEAv0MyBo5RSvM/kIjr4gFK4By2uytnLYaFP5A1bTZVeO043Mryuy1eU2Q
      nz2mzc72mqrNJyJpSuEYp83op1YAFaGcWgGEemrGn/uMpp06N/sZVeO9VzXwVx94K+FQiFRk
      nI5JgSkzSW3zKnoGAlx71Q5QMzz8yNM0VnuI6fxsbC7jtz+/i7KNb2FLy5kFzBbNB7DMEj+A
      s6iQSC5JMnZ7QayR9QZ8Ph9mkwGb3YYE2ItcuNwevG7XohlSRrN1nvgBLLYC8QPoDSZ8Pj/O
      WeIHMFpOXa8zmCh6gxE/QDI0QXFVI6tWtxEIjAIwEZhgVctqVteXMTQ5w+HOMTacVlrm9Q5J
      1uHx+RkcDrB7x3oUWU9NdR2SmkIASiKIuaSappYWIoFJTh55kaZ1m5HPQjzLIle8/UMfWI5m
      VnAajGYrmXSSXEbGZLQAYDGZSaazkEyRzQ8xE0sRG+3BUruaIuNlHvArhHwiQNbox6YviFVC
      qICEBOhMFrT0FEo2i84AJ3tGsJsVZqQ4G5vLFqS3zuGNJ1i/RmB2VeLQnmf/sSm27bqCgwcO
      sGHdOp5/fj+YXezatpFtW6C/o5LymnICE/2Xe8ivCMYnQmzZvAaAtoYqnnzyaepWrWW8+yi6
      0lbK7HmefuE4m7bvwrV7O8nQKNNZ+6LED0skxa/gtYeh4T56MjHyc9YcUZDfVY1Z+V6gisK5
      wh+z1qBT31WtoCMUjp32fV5HmNMNtNnAvMK9QpsrhiAQqkAT2qwFR5zSATQx+3/OyiMWWITE
      /PlZC9HcMVHQH27dUcdH3/O2ZX1nZyTFZ7NZcrnc+d6MXn/5FpCpcBgBlLjdC46nUilC+RwG
      VUPkcuQVBbvdThKBrFue8WqqitdsxmI+pdeMTYyjmc1k4wl8TidFRUVLzjpLwXxaexcKRcmT
      y71+A6x0Oh0mk2VZ25QkSVpAEYqikM+fX4yIXq/HZDJd8I+8HAgEAjzW3o7PZOKte/YsOHes
      q4t+nYxxbJzwzAyxfB5vZQXZYAj76hbkZWDa5MwMO4tL0Ov1VFVWks/n2dfZha66CkmSSHZ3
      YY7GeO+tt553m5nTYncuBnq9Ab1+cVPfCpbGRVGDLMvk83lUVV2WVUAIQV9/P/FYjKrqanze
      s3v8nE4nyYEB9E2NJBIJ7HY7AOFwmJPhEEavl8npaUw+L0xNYywrY3JoCIuiLAsDmJxOwskk
      nZOTGEZHyOXzyFYL1tnJwObzkbdYeOqF/VT5i0mk01SXl+NyuS657xUsLxaIQMlkkmz23Muo
      wWBAr9djNBrR6S4+rFMIQVd3N/v376d/fBy9yYjF7uAd111HXW3tWVeXUCjEsZMnMUgStXV1
      lJeWkk6n+cmze3FWVMDgECmHA7OrCEmWyaVS6PR69CbTRY/3dOQSSfQWM/JZnj+fzgACncGA
      Gonwzq3bsFgKy7iiKGQyGcxmM5Ikkc/nL0kEWsGF4wwd4HwZAAryqsViuWgRSFEUDh0+zE/v
      uYfK9esoa2lhvH+Q2PgYJR4P29asYe2aNWcQxdTMDBaTCYejsCtNLBbjgccfx+X301ZVxcOH
      D+NpbiJ88CCW5mZMNhuSfPnzfrKJBO5YDMliwWOx0t3djTAZMXk8GCSJTTW1NNTUXO5hvqFw
      UQwgSRJms3l+5roYCCF44MEHef7FF/HU1ZLNZHCWlGAtLiURmKS0uYlkMIRdp+NNra34vV76
      BwZw2O0Mjo9jNZno6++nvraWkeAMiVwerayUXDCEJRolX12FFAgQmQmi6PX421ovi67yUqj5
      PDqDASEE+UgEnaqh8xXEvdUuF+vKKy7zCN9YOEMJPhv0ej1msxmDwXDJxBQKhRgdHcXsclK7
      rg1JkpkJRrG4XCRnZkCScJQUI4Tg4ZMn2V5RQTKZ5LmTHayvreNIKEjGZiUcjWLxFer0S4DJ
      5yVlNGA2GECnx1FexmhPL/5LGu3yQWcoKKmSJGF8ifWKN5yv+9WB85YNLBYLRqNxnvhVVWVu
      8VAUhQtxJyiKQlqvo27jBmwuFya7jXwmXSg6K0vk02kio6MIITB5PXSPFdL3bBYrBwOTGNxu
      HMXFWFxFZ7StMxqZPHkSfTYLDgeVmzed97guL1bcMZcD51wBJEnCarUusPYIIfj5ffdhd7nI
      ZrMkdTKb6upY29p2zg6FEOx97jkkswl3eTlCCNKRKGo6XWAiSUZvMmEVUJPOEM5kiCcSHE6n
      sJSWYjmH0q03GjFZrSScTsyW5bUbr+D1h7MygMlkwmq1ApxRJlwny/QFZ6jZvAkn0BeYYu15
      dBgOhxmLxSgq8aPT69BUFU9Ooaq2lu5MBmk2cilvNBCLRHBYLEyaTNhLS87rgSRZxv0aUyaz
      8ThpAazoAK84zioC6fX6U7XwT79Jltm9axcmvZ5cOo2YnGLX6tZzdpZKpfjdo4+CxYRxdnbO
      JVOYdXp6MxkMFgsmu4NMPIHZ42Eqm6UzEcfseam8/PqCwWKZ1w9W8MpiSSuQLMs4nc75TShe
      CiEE+XyeiclJqiorl7xuDpFIhLt/9jMMNVXkMxmq21YTm5qmwWTl4MAAzpbVs5tfCMID/RQ3
      NszrFa8GC85yQAhBJhzB5HQscMipeYXVTicb6+ou4+jeeFg0H0CIQuaQXq8/K1FLkoTRaKSm
      uvqM616qEAsh+NX99yOVleKrq5vfeUWXzrB5wwacXu88kadCIWxez3wfrwfiz0dj5IaHyYQj
      JHp7OX3bnOz0NI2SRE3RmQp9NhXjxPFjDI9PXZCRYXFoTExMvuZU7ZOHnmUwED/3hReJBZSr
      0+mwWCzIsnxJHt45ou3t7SWRSAAQCoeRZrdCmoPeZKS3t5fgyCi5RILowACpyQmcvtf+FqTz
      FrJslg1eLzds3ESVEBRVVpCaCZKbmCQxOMR6j5dt69bN61pzmOg9wn9+8ev0DQ7z1CO/ZSx6
      abFCoPCr+x64xDZeeTS0babC9/KVcDlDCbZarZcc5CaEIJPJEI3FqJ0NaSgvLUVXWclkZ+e8
      xTtvNDAyOsLO1tW8cOIEXo+XqF6PoiivyZlfjScQicJsZdQEwVQSg6Ky+m1vI5FMEkCghCNc
      vWkTtbW1xONxihaZ+YVQ+fWDj/HJv/17PNZTukF0eoS7f3ov0bTC9qvfzNXb1vDM4w+xevu1
      +B0m9j38EDV7rkWMHOGRg0PEp0dJ5nXc/rGPcuDhu3lu316iiSDrd93ArloDBydlIj37MJat
      Jjoxwh+/948xyBL7f/9r/BtvpN5X0NMmBtr52S8fIi90vP29H6bClucnP/kpM/E0a7ddy5uv
      3krn/sfZ3xMgODmC1VdNpVPQ0T3Iqq1v4rbrdvDY/T9hPJxnYmKCpo1X8PYbryAy3suP732Q
      VCZHw9odvPPNV9F74ElSRbUcfvwBmna9BXe6H13NTpr9On561/cZmYnjKW/mzz74DvLRKX70
      o7sJJbKs3Xktb75qC+3P/Y5jY1mmRnpR9E4+9rHbsRuXlmQWtQJdyuyvKAp7n32Wjp4ebrzm
      mnnz6e7du9nX3cWuhiaOThRs/OZwjNVr19HR0YFstjCayeCvrnxNEr8Si3N1bS3lJSWFjQA1
      jXAkgtlkIhKN8nRHB2lVpbmsjLq6OmRZXjI4TlPyqCb7AuJHaNx7z73c/Cd/TqXLyP9+839o
      bG5kJjBJTilsChgKTFCiaGjxEEnJyR0f/xRDBx9h/9Eh3vLu9zMwqfAXn7wDCZjufIZf/PwR
      br/jDjY2V/PIPd/m2GCQzXUu9p0Y4RPXWWbHkuGeXzzEBz/6CZxGQV4Y+NUPv8HuW9/HqjIn
      9931LdobG0iFpiiqauX97/0T7vrqZ6i68qO8+bYivvm1O1Gu28HU5ATbb7md5lIbd3/nq3RP
      rqfOU8aH7/g4drOBe+78DoHEDhKRKX720It89I7bqSv1sO93+9CXKESH2gma6vmHf7iRSDiC
      DNx794+55h0fpr7Yxr13foOTjc1EgwH07nV8/O238uJDd3NiMMiO5qVdocseJCNJEidOnEBx
      FdE1OjJ/vKqykitWt/LU00/jlPWoikIiFiOv5AmkEhS57fjddjT1tVfNOJ9Ksdnvo7ykZH6X
      S71ej9/nw+Fw8GxHB1m3C7PLRZHLdU6DgSRJqKqyQF4Xap6s0U5NcRF6o4UdmxrpHwsv2UZd
      YxNmox6L1YqmLf5Od153KxtXVSNJcPVNN/Hs448THunAU7d2Pmc7l57G6VuF12HBYLJiNRsI
      5XW0VPmQ9Uau2Lme3sFJkHRUVFag18k4XG4qykrQ6Q2Y9DIC0BlN+DwuZL2BbZtXMzwRZqK/
      g699+Yv81399jmeeP0YyXxjnze94D3VlngU7jLrqNlLJKJ/+10/z898+iaopJFQLDWUudHoj
      V+5aT89AwWHa0NyMUa/DarEUEvTPgmVngGw2S3FxMYmZmdkkoMIAJEkiGIkQzWbpae9AHRrl
      lutvwF3kYiYURLLbiIcipKcDRMbGL7r/2OQkscmzbCS8zFAyGXypNKvqGxZdubLZLNPZTCHi
      MxSitLSUaPTsBaxknQGXlOHkSKH0pBAaQtYhZVIksioIQU/vKMVeOxKFrCyEIJU+m54goah5
      Tq+fbjIa58VRs7sGZ36M3z5xgF27Tu3vbDC6iEdHyKunSquYRZ5gstBWT/cAxf7zN1MLoXG8
      vY+qUjfPPrePj/zNP/IP//iPvGnbnBNVwmQ0nBEYks9p3Pa+2/nnf/lnKqVxeqby6LTUfPn3
      zq5+SoovvHDWsqZ0qarKL37zG4YCAarcbiazafqHhmisqyvkDkgS+VwOu9uNWafjsWNHmZmY
      IKsKkpEo7spy3KWlDHd2I4Q4g6Be+n1O0cwmEkTHJ5B1Mna3m2wiwcjhw9g8XvQmE87zdKKd
      3s8ZlixNQ1NV5FnfyByUVJrjBw/gstspslpZ1dy8YIaXZRmhaeRSKeocTop9PmKxGPF4fD6i
      9cwByLzrfe/ne9/9Nr9WJRB6PvTxT3LrjXv46uf+A2SobNnGqlI7xtZGvv2V/8LjKiI4Os1W
      CZB16GZrAkmyjE6WAT2NJXr+9TOfZcc1N7PZr0OnWzj/3XTdLj77v8/yng+eUjp1RjvXbm/m
      P//j39HrZW59z0e47a038Z0vfxZkGU9lG7c3l3JkWD9v3dLpTxGwwVAgsVwywre++nmkfIbq
      th2sKnOgrW3h65//d5wOB+lgjI0SyLP7Uc/3r9OjkyA5M8R3fvxLNAFGezHX+s3433Yz//OF
      /0CSJDw1a/lIk58X+/TzlUlknR7dOcTpBX6Aufj0i4Wqqnzthz/EWV6OR1VIl5aiBALcunMX
      9z74IGFNo6ytDYPZzEx/H6XNTUCBuMID/ZQ1NSLLMn0HD2MrK8fu8y0gxqUYYKavD6vTiau0
      dP5cJh5H1ukJjY3iqqk5a9y+ks2eM09guqMdt7eIeDyFq75xQYh1KhIBIRg/cJC//shHsL3E
      ovPDRx/FLEncduWVmJbo51Lf/aVCCEHPi7+nK1PGrVeej0//wnDPD77GdX/8SXzWc1/7SmHZ
      9wnWNI1Kr5cb1q4llk6TCM4QjkZ5dv9+Rmdm8DU0YLBYEEAyFEabt/ZIxGaCBPoHGevswmS1
      kguHyaVScwOdJ/5cKsVkRweTHR1ExsYIDg6SSSQw2RaayswOB0arBX9dHWPHjhEeGUFTlPnz
      6WgUVVHIpVIkhweZPtmx5HMpuRyOIjtl9XVU1tcQHV8oolldLnSShLOo6IyUUiEEdkXhmo0b
      lyT+VwMOPvkQvz8e5Ppda16W9kvLq1+VJfGXdQWYQzKZ5IVDh8im0wiDnmk0xvoG8NY34Cwp
      Yby9HUdFJaHBAZxuF7Jeh8Vsxl1WuqCd0ZOdaAKcFRWYbDbSkQhT3d00bN8OQCIYxFJURDoa
      xe7xLJn4oqkq+VyO4PAwstEIuSwen5tkNE46k6W6qQ69wcBodx86nY4sEgarDTWVIBNPoDca
      aV63Gt2sRat9/0GK6hoWMF12fAKDqlLn9bJjyykZemx8HEVRqK6qOqt163KvAG9EXFA+wIXA
      NpuFFVByuKvK8BmNuMpK6XnhIEaLBVmnIx8Oko/HyOll4tPTlDY2MnTkKE6/H09lISiscnUL
      04NDKNkcJpuNfDaLv65unpAcsw4zxzkcZ7JOh8liwen1kpwcw1bkxFtehq9iYbm8+nVtBR9G
      MomSzWGrLqP/yDFcfs8CEWr1lg30Hz9JxmoHScJZVobdoEdLJqmuOBXQls/nMZtMeMoWL8q0
      gsuPly1XcOvGjTgNRmSdDiEEuXQaNZdjcN/zZMIhcskkTncR/opySuvrKK6uxF9VwVj7CSZO
      tBMaHSM7Nk5kdBzrbNy/o7iYyGQAdWSE1NDwfNjG+YQJTPf2kg3P0LxlI06fl/DE5KLXSZKE
      xW7H4S2sKN6KcgKDw8RD4fnzsk5H3ZoWfEW2AjNHolyxupVwOIx1NsgvmUwSDodxu90rxP8q
      xrIzwBxB2qxWWmtqySSTAJhtNvRmE6v27Ka2toZwTw9KMok2OoHdaEJnNGC0WpL8vGgAACAA
      SURBVCiyO3nv9TeSHBxGH0vgrqmety4o2SwbKiqo8/mZHh1lqq+PYF8PoaGhQjGlJTDd14fF
      pKNhXVuBwG02ZkbHCAwMFoovLYLwZIDxnl7ymQxr9uykyOddQMjJaIzx0QnMTidr3C4cDgf+
      4mIEcOzYMQKBAMXFxee0+a/g8mLZdYATnScZCM4gAfFIhLTRgM1qxSKgSKcnMDOD5vdRocHh
      rpPUlJZhNZrojUWQdTp21Dewfs1astksRqORobExfrf3GXRuN0aHg3U2O5JOR3s8RjoaxV/m
      A0lmcmAYncmMt7YWJZcjEQyiZLMITUPJZGjZ2HaGJSgVjzM5MIytyInF6cDucqEqCqlYnODo
      GDVrVp/hFZ97XQNHT5BSBKsrKrlm61YGBgbYOzRIZmKC63fspL6+/oJm/le7DiCE4JmHf8mR
      /jAf+vM/pch8bun56Wf2cuWeK5Y8f/CZ35F3t7C+0kj3pMb6lqplHPG58bLoAJFwhMGxMWo3
      bcBW7EMORzAHw9x6081MTE6i5fIoksxAIsKezVvp7O6ivacbe0kxyVCYSYuNvKYxEY/itzko
      drmp9noZi4cZ6+pEq6jg/bfextHfPEg4EkbNZVFzOSqaGwhPBpjq62O6t5fKhhrqVjUyMzqB
      YpQXVZCtDgeVzY0o+TzpeILh8ZOFgECHnZq2lgXEn0un0RmMpGMxMmMBdq9qo662FqOxUJX2
      6PHjVLtcbH/b27HZXn/7bw0feZzulIc//8C1CCXJD755F1lrBe97626O94fxS2FwV/D0H35P
      KBjhlltv5nvf+RYdvZO0VBcRDc2gSgZuefONPLXvMNe/6Ur6+3vpCY/R+I4t9A6raNPtPPLc
      MW559wcJnHia7qFRzE4/M4EgH/rYHTz/4E8YSVm4/U/fg2WZTEoXxACZTGbezb/U0p6VBHrj
      qeRvV06horqGVCpFNB5DlSSu27adI+3tHGtvx+104CyvwJnOkM7lCBklJJsRi7OUuBAEU1EM
      dVXoO1PIsoQw6RkaHsLvcuFZ2zbvJ5jq66OkpoqOJ58hn0wQDYaQegfwV1dhddiXfCaj2YTR
      bMLqsOMtLz3jvBCCVCiCIRxnJpOipaqW2t17FpQ+FEJg8fuwWK2vS+IHGBkZYeOWd2FzOmh/
      +gHKttyCY3wv+04OEwnn0MsTIDtI692869pqjoX0bN2xk499+F385JtfYvX1f0w1Yxw6epCs
      zlNwlMlGrlxbwd5jw2CswGT3sLmtjuf3H8KSCPP+D/0JP/z5Xq5eW8qJw8/SPq2nyT7NkcEQ
      O5uWp9TBBQmoJpOJYDBIMBhcVPEUQqDm8hjNZpjN9a0qLqa2pgaDwYDf66OloYGOkyfp7Opi
      z7Zt7Ni8hcjgENNTU9gsVjzlZfPMJTSBwWQiFYuRTiapamvFaDThdBZRX17BZGcnEydPko7F
      8NfX073/AEaziYrGOhxOB0ouf1biP19kgmEMej17NmzCbrHw4DPPEAqF5vWdI0ePMhGO4HU4
      L7mvVyvWbNzKgz/5Lg//9iGE3cOJ/U/xQscIpV4nve0HefbAMQCsVht6vR5NCAzZGE/tOwpm
      N6sbK/A1bOYHdz3A9i2nsgcbNl/F0OGn0IDf//4RkskkqiaQ9UZMJgM2iwWdTsZk95CaGUGz
      evHalq8W/EXpAIqiIMvyoqtANBajq7eX4YkxStwecnodoWwaSScTCkxht9u4ectOpqamWLVq
      FQCdXV0MDQ6SyWZxzlpfxiYnSaaTmP1eYtNBqte0MjkwSO26NSTDEXKJJK7KciRJYuRkF/m8
      Sn1zLULTyCRTtD/3AnXr1qAJgc6gp6T24vOE85ks0lSIXRs3MzE5yR/6etlTW4emacyEw/TE
      Y4hcjvde86aLXgFe7ToACIKBUYYmY6xds5qJwW5Uk5u6Cj/dHe0YbU7cXg/JVBaPVSammrCK
      JAMTMXwuK8Xl5eSTMe68+37+8iOF/SQCE6O4/OXEpkZQTW70uQiRtMBmt4GSo6TUx+RUFLtB
      Q1hcZMMTjM2kWLOmBYPu0o0LZxTGutgf4fS4nWw2y96jhxAuO2O9/VS2rZ7rjNHObsxGI1e3
      rqe4uHj+fk3TmJiYwOl04nA4SKfTDA8P8/SRg7hrqkgnU5Q11DHU3klV66ozlMvx7h4qa6sw
      2wp+9u6DRzGYTFQ01aMqKhPDo1Q2N57zGZZ4SeSzWbwZlc1r13PkyBHGJicLdUh7e/F4vaxv
      a6PM56O19eILcL1SDKCq6iWFu18KMskYWWGgyP7qqNaxbEpwLBajqKioUPLkyEEMZT6SsTip
      RBJVUdDPJnw7/T5mRsb49YEX8VltXLl2LdF4nOf6+vDpdbTW1SMQhEJhovE4U5MBpoIhalpb
      EELgKS1mengEf3XV3AMAhVginV6PpmkMnezGU1aKw+1ipKsXh8eF3nD2xzybH0GIghh2/MRR
      VtU10NbWRm1tLT+4+27eetNNbNm0ab5Y8Iq9/+ww25xcCovn8io6WTojiO9ScMkMIITA6XSS
      TqfR6XTE81myA0Pkcnmat29ZQBQOt4ux/mFKm+sLVd+6OtFrGrbKCgZOnkTyB8kGRpBkidHe
      fpx+H9bKWjSLhYGOborcTiY6ujAbjDjKTkV4WpxO+k90IISgtrUFk8VCcGISf1UFtiIn3QeP
      MKH24S4vwzwbqCaEIBmNIQHWorPL7kIIMBkJBAI0NDTgdDq54aqraGk5ZSmaswat4OXDk0cG
      aSh301DhWbY2L5kBwuEwQ8PDyJJE7+AA4Wya0rYWfHbbmeHMsozOMBtOLElYTyuDLhuMWJ0O
      rE4H+WwOkUxjq2ucv0ZfVUs8HKaorJIml5eBYBjZYkJvNOIqKSYyMUnL5g1IssTwyW4sTgcO
      dyHjyl9ZTnRqhuFj7ehNJhQlj1A1fBVl9B07QcPG9XjKzrQAzUEIgdNsobKyEiEEoVAIv9+/
      QJQQQqAoCoaV8iavKVzyWuLxeNiwfj2NjY1YHXacLidTff0kwpEzri3oCvIS3tdTxwwmIzWt
      LdRZLfMZYrJOh93nw97QwPMHj7DBX8bE/sPEegaIjY6jJlOER8bJZ7Pk83l8FWXz7XnLSqlb
      10ZVSxNKLktgYAizzUouk6Vt+xby5ygIHJueoa2yBp1ORy6XIxKN4vF4zhCdtHNkH63g1Ydl
      0QEURSEajZIz6ahoaaHv6AnUVJLJSJSS2up5J5QkSbh9LkaPHMLq8SLrdLgqF88Btpb6KIrl
      mA6H0U4LdpNkGamslHt+9yhZNCrdHna1tmHZcUUhIefB+8kZdAV+khbK9w6Pm9q21XhKi+l8
      4RA1swp1Npkin82SCEdRlTzeioJ1KRmNkY3FaXL5qK6qIh6PYzQaaWxoWFRvWGz2Xyyx5+VE
      Jh6iq38Ub2kFfruOzp4BXMWV1JS/WkoEv7qwLAywd9/zhJNx3M2Fwk4GoxFfRTmqkmestw9/
      TTV6o5Hg6Diy0Nh0xVZGOnvwlPqY6O9BsjnRVJWBo8fn2xRAXyLF2uZW+l+ys4uzrAyr10uo
      r5eYXiYcieCaLYf4zltv4/f7n2Po6AlqNy5M7BBCkJkOYYyl8dqdVDTUYbJaCE/NcPzJvdgc
      dqwOB9FkFlVo1HiLad24DZvViqIoOByO+ST/xbLVFiP05SJ+oanEE8lClW6LZdH9mAFOdvfT
      2NyC2WLh5LHDrFq3iRNHDlFd7l+pP70IloUBZIuJkoZTYcAmixlVyWOyWKhraabn6AkURaG2
      pWneMeWcLX61akMb0WCInuEBmq69ckG7yUiUUpuHmbEx4s6C5zUdjZIOTpPPZHAV+3GmMlRX
      Vs7fY7VauWXP1Txz+ABwKr1RU1Xy02H2rNuEx+0mGAzy2MH92Iu9ZPN5vOUlpOMJaj1+9AYD
      Bp2ObZs2z7fb19dHcXExHs/yKWAXgvvv/h49wRxeg8KWt93BuvLF/Q2RSJDpwASBUAKDDsx6
      GYMkkRcCnaYtqOr9WoOmFsavnJbYdCFYzHd1UQwQj8cJhULUzM668VCEbC5FSXUlqqoi6XRk
      kqmCR1iCivoaEpHYPPELIUhEo5TWFHY5d3rcFHnOLBGSSiR5cWiMDY0t/Hbfc1iLnHh8Hura
      Ghk4epJGu4Pt6zecYdfW6/VY9QZys+JHPptFnYpw1ZZtGGfFFI/Hg13WM97Vi63EDwL0JjNd
      /X289fobMRmNKIpS8GpqGscHelkrS5eNAaaDYWoq6ug8doydZ9Hc3E4X/vIKpoIdOI0yU9EE
      aUXDIElIs+/pcvkBLhWyrlCwbTl3J70oJdhqtc7Lu0IIUkIBAR37DjA5MEw+nUFvNDLa08+x
      p59nYmAYnV5HNp0mn8sRD0fQGwwYzYUUwfH+QYorz6yMHJwIEE7EOdJ+nPLyEhpbmzDrdOhD
      Cd59w03s3rxlyZdRU145H8OfGp/imq3b54kfCg6hbes3cvPuq4gHw7hKS1DzeSLxKM+8uB+n
      0zlPKJIkEZ6aZmJ8/Ly3kV1u/OlHP0F1WTnv+sAdtJQsnVi7btMmJkdGWLN+PU1t60hMj9O2
      bv2K+LMELooBdDod5eWFbCpJkoiNTtL+7H40VUVVFIqrKxnrHcBTWkxxdQWR6RlUVWVqdJyJ
      gWGiMyEmB04ltGRTaWyuU7b4RDjK1PAoJquFtl3bkLxOQoOjVAgTW2oaKS5yEQhMkpzNNVgM
      xX4/+lQOIQRWo+kMRjl58iQGgwGXy8VERxfxjh5KKssora0mqynodLp5+T2fz+Mwmnnmmb08
      ++yzF/PKFuBirEXPPfkoJ0528dPvf5O+6aWfW9YZaFq1CrvZgCTrqW9sxmFZ8VEshWVxqb31
      1lvZsGkjdlcRJquF9udeIJ/N0n3wKL2Hj1Pk9+L0eqhorKeyuQG90YCiKKiKQmgigKZp9B8+
      TqC7n6neQbSZCInRAJVNDQC4S4pRjTqOD/VycHyAnsA49XX1Z427kWWZGm8xyUiU6bGJM4iu
      urqaoqIiZFnG6/HytrfcijI2Q2IswHXbdwGnbPuHDx9m9+7dGAwG2k92nCFDL7a38rnkbCEE
      6gUUAdu08xpuu+02NjeXEE6+9oqHvVqxLAxQXFzMzvWbyCdSjPb0Ube+jYYNa/FVluEuLWZq
      aHQ+HCI0GSAVi+MtK2GwvQtNCOrXtuL0uFlVUsH2plbWNq7C5rAjz7q8zTYrbbu3kVbyxMIR
      av2l57SuaJpGU0MDjTY3Zqed7t6eBedNJhMTExMYjUYsjsL5a6+6mg/88XsoKS54mSVJYmpq
      Co/Xi9frpay8HNlhm1fCNE0jEo0uaf5MzVa1EEKQO41J5Nkiwem5XXHOA10nDvHMM8+gK13L
      msrXb9TpK41lywgTQhBPJHjqxX1MhYMU+/zEY3Eqikso9/oZC00zHJzC6rDjryxnvG+QquYG
      xvsHMVosxENh1GSaVRU1VFdVMR6YpHNqjNrWVWTSGWbGJtDpdBSZLFy/bdc5Uw01TZu/Zmp6
      GrvdhtVySnYWQjA5Ocnx7k6qikt5/PBBbt1zFdWVlfMbgAempvjNE3+AfJ6NrW00NjXR1d3F
      2rbC9q1n27/g9HNztUJlWV6wubiqqsizpeKXfPdKll/c+1NmYqecdTe+/X3UFl9cmPflDIa7
      VDz6Yt+yhkIsWzToS7HYS9Y0jUQiwa8eeQijt4hMIsX06DirtmzAaDHjcLuQJIlcNkvH3hew
      Fjkora9hZmyCeChM646tKJE425tal66odo4xLIYHHv4dmklPYGqGutIytq5bTyhcCMZrnxgj
      k0nS7C/jih07kWWZoaEhNE2jtrZ2WfJ9k8kkNpvtnO8+ODHA8wdOIICte66j1HVxEZUrDHAK
      ZxTGymQyTE9PX7KdeKkXrGkaeVUjLwo7o5c11OIu8eP0nKqcEJ0OUr9hDSabFZvTQf3aVhwe
      N1ooxq6WtedF/MB524o3r11HMhbHU1HMC88+i9VqZTQwweGhXvRmPXVrV5NMp7jvl7/gB3fd
      hQAefuRhuru7GR0dvSAx5vT3MHdPLBY7r/t/+MO7iSsqkdEeYrnXph3/1YgFppGsqnAiNs3k
      gX2UFLlxWq2sa2k953J/vnA4HNTU19Pd34vL68Zis56RqD7RP4i7pJiy2mqGO3vwlpVS6y1h
      54bNZ1hyzhZmcL7RmeXl5axvXEVvcJK2a/fws/vuY9OGDYyHg9jtNqJD4zSVlbMvOE1dVRUD
      /f2UlZVxor2dQDiIzWrFXl6CAYkSm5NVjU1Eo1GsViv9/f1s3rz5DB3h9DGXlpae1zazq5ua
      cZe6efhwkB1nuU4IwdHnHkMuXUOJPsHQTBxJZ2LrhnPv4PlGxAKK0hsN6IwGKta0AJDUNB4/
      epBqp5u2VS2XRPxz4sKedRvoOX6CYHaSVVs2nNGmyWqhpKYSo9lMbVsL3fsP8Uc33nIG8Wua
      RiqVwm5fXBY+37FKkkRbayvFM8W82N1BaVkpTY2NNDc1EYvFSKVTmEwm9Jk8oVCQt932NuLx
      OPl8nrHxcSZnppDNZlSzgRmhMdV5nFKDhWw6w/DoCD6fj9q6OvSnMfrpY5MkCYPBcFaL0LED
      z1HRuolVjbVs33nVWZ8nEhjC5C5DlTRGZ6Js3byFIwcPogiBPKuLvFahaRraBVrPTsdc6frT
      cVaXmiTL2MqL6RkaZa187l0gzwdms5mN69cRtegIDI8y2tOHxWajprWQHml3uUhG4xhmd6lx
      +bzzs+Ppq9Dc/sXLEWwmSRJ+n4+rrVt4+vnn+MVvHiCVzaKmMuzasZ2iIhfbt2zFYDTQ19eH
      0Wgkm83i9/ko9vvJZDM8sm8vpTXV5BIpEiLMVRu2sHnzZhRV5Ve//CX19fWsW7fuosKl6xqb
      OXjgRX6093E0DNz67vdQWrSYvqCw74Wj+P1FTAaSlBfpT72z0571tZq4I0kSEhcvhSx23zl9
      ypqm4been9x9vij3l5DMRKhbW2CqgeMdZFJpTGYT6UQCWZbp2HeAlm2b0JkMRKJRHA4HyWQS
      s9k8bzmZc6Qth1InSRI2m42br7segFwux8TEBLFYjIH+fsbGx3G5XNTW1lJTUzPPeAaDgWQy
      ybuvfzMd3V1s3XMNJ/t6+f1TT9Da2My6deu48cYb6erq4tFHH+XNb37zvOJ7vj/k5MggednC
      5s1b6Oo4QV5ZSlzSc/NbbyOfilCeAlM+RjiRxun2FsqEz76z12qxrjnmXc7xn5UBNE0jMzHN
      ro1bl61DAKvNRj46hdlecGRZHHaOPLm3kLgyE6KmdRXDnT0MnujE4rAxOjGOLEmUlJQwOTmJ
      3eHANevEerlgNBrnY52goFSn02nsdjuSJPHYk0/SE5ihotjP+oY6qquqeGLffkwmE1vXb6C1
      sVD6PZFI4PP5WLt27fzGGKlUCqvVOs8ApyvFi6HIV8qOBh8Oq5kNGzedc+wGq4tyK0Ahvsrr
      qL24l/AGwFkpKJ/O0FJcjnmZy3qfGOzF4T21q0gyEmPTm/ZQv7aVyqZ6Bo53YLSYsbuclNXV
      IOsLoRfpTIZ97Ufp6e8DXtnlXK/XY7fbefrAIX7z5NP0ZhTkhmaG01lUVSWbzRLWG3nq0BEA
      7HY7drsd32wug9lspmR2C6W5pP85nOs5PL5iLCYj6VSSRCKJ9hqM5uwZDV7uISyKszKApqoY
      l5n4hRAMjYwwMTDEeP8g8XAEJAgHZohMzxCPxJD0euyuIvLZLPHRSRqqaxgeHeXJ9kN46quR
      l6jn+XJCVVV+/cijHE+kGLO7kHzFSJKE3lfMUz39HDhyFGwOulNZZmZmztqW3W5nbGxsQdvB
      4NIE8usffY+hmSj/+v/9A5/953/iZCC9bM/1SuGxgwOXewiL4qwMkIsnKS25sO2FzgVJkqgq
      q6DI66XI5yMeihCPxIhFooz2DlC7tpWy+jqsDjvlLi/XbtqOz+sjnUlj93lJRqI0NzfPtze/
      H6+ivGwWjkwmw6ETJxi3ODA4ihbM2LJOR87j57jQoXM40dnsvHiy86x+CK/XS21t7Xxk6VI1
      luaQzecQ6Pjk3/4/7FxXRzp7cfHwL0UwlqJ9YGpZ2nqt4iVv/dQyrKkq5RbHssZez2F9YzNq
      LofVYcfqdFBcXUnNmtWU1tcy0TdIPBRCAprKq+ft+dFkohBCrYgFzrBwuBDyfHr05nIhFo/z
      6yef5tt/eJqDWQ2D3bFk1pfOWLBayXo9w2YHj+9/cVGG1DQNRVEoLS2dJ3pZlnG7l95o7rZ3
      vpPf/Pjb/PyeuxmRathYvTxGiXgqx3Dg7Bv2vZbxrfsPnPOalzBAYXOI5OAY1mCCdS2rX5aB
      eb1e9LOz2Fz5EoBcNkdChZlAkJLaKmZCofl7skoeJPBaF9r95xJUXg594OlDRwjYirCUlCHr
      zn8ikHU6ehVBe3f3mefkQlLHXI3V80Fek/nTj/0V77z1BhprK1Zi+88T5yMoL2CAfDZHqabn
      5t1XsmPzlpd1TyuzXPjxNVVjvH+InqPtJHIarooKosEw6niQ5sZT1dxWVdciJkOsbmxeqsll
      RyQYXHLbpXPBYHfwxMAIo6fJ+nO4UGZ94Bf3EUuG+MFPfkO4+1mOjSaWvHZiuI+jR4/SMzhG
      KjrNoUOH6Bm8+G1nX+9YGAuUTOIvcr/sdmJJkij3+QkMjaCqGorJiqdpFc7SUpRsFrPdTktt
      /YIMrpLiEq7cuuMVrb5cX1N91o03zgWd3Un8LEk754uqUi/33vV9Nlz7Foy6s1dG85ZWsXZN
      K6GpCbp7h1i7YSOxmXFeu/7flxcL1mCf14fF8srUbayrruFwZyd6jw/7bPGreCBAanqadQ0N
      lJYuXajqlcKmtlZefOIZLMUXNxZJlhHLILCsu+I62naC1ekmUWvH7jlLnFM+xf4DJ2les57B
      3g4MsoROklCFQLwkKV5V1Xmd5OWGeEk/4XgGnU7CaV1cyugcnsHrtOJ3nQphv9Ck+FxO4dlj
      g2xvLRRNOGdSvF6vf8VCZWVZZkNTMy/GTylhdr8fr8HIFRs2virc9SaTCZ/RwNwcLoRAjYSw
      aSo+m5VQKk3SXgSyvKBsy9y1cipJTcWlh5Dcd+/PuO36K/j+H46xrWiSbN1NXN1avOi1Bw4e
      pmnNBowyeCxGBscmyGoS+pckxWfzCkJIZ+giiqqhqBpm4/IaP6SX9NMzFsZmNrC+cfEVfSKY
      xGwyUnbaPReaFK8KQe94hN3rape85mXZJfJ84XK5yAz2g8GITgj8Nhs7N295VZUXTGYy5OMx
      XGoei07mmi0bcLsKHlZVVfnFE08zNDSEc93GhfqCEKxy2s4qsgkhCAaD886yJZGN8/DjT9M9
      mCRvibKl7qYlL13V0kIqmUBVBbWr2pgKBFi3ft0Z69C+9jFSmYUJ/vc+2cGWVf9/e2ceHVWV
      LvrfqTGpqswzCYGEIUAYAmFUBlGxRXG43doirX1xtl2N3fc+b/fVt/q5bG93P593td2vW322
      2oJ0K+IsTiCIiIARMpA5QOY5qSSVpKpSwxneH0VVUpkTAgSpH+ssUnX2dE7t75y9v/3t75tC
      WY2Z61cM7037YvNdST3L5w50pDBWLqoAREdFcdvylT77nsm4UeO2K1bgcDpJOLuK2xe1Ws3N
      q1fxSZeF1k4LQkSvu0Rnm5nla1eNWP63333H7JkzSU5OHjLN3fdvw+5wsens59DwoTeERMUm
      ENXnc1zClCHT9sfcaR9VOrcoodVc3N8q+1TjkAJwILuSmUlDq5X7ctGtokJCQtBqtZOy8wuC
      QGREBFPih96DHBQUxI9++C8sTYjBbenA3daK3NFOSrAnOOBI5a9dvZrPv/mG2sbGIdMZQ8KI
      iYnxHfoJDLne4xLpcQ7c1N+XnXtP+qV55ZNcAPLO+IeatVgdVDUN9Ak7VvqWa3e4cbg8Y/6T
      Z7/v6B5+JdwtScijtBa46ALwfSFz3lzuyEjnhlmpXJuSxLXLR2dA2GGxEDJtKu6L5G+oqLKF
      osrWYdMUVrZgcwwUkmNFdQD88wuPS8u2TjunantNOr7KraK8vh2XW6LbPrwDYi8tHTYO5VYB
      sOdIGV/nV/vKPFZUR0FFC7u+LBpVWaMhIAAThCAIREdFUV1fz8GC4mF9Fnk5XVnJZ98cJlmr
      Z/rUCxMiVJYV39O8dYghj0uUcIlDbzpxON289mke9a1dAFQ3WWhq96xNKIpCaY3HFiqrpJ4/
      v5PFW18WUdHQ4cv/0kfZQ5Z9rKiWE6cakWSFvDPNPk/ir36SgyQrON2edtl6XHz4TRnflQxc
      ZwHocYqMxmYwIAATzOyZM9Cp1SOuVzQ2N5NXV8vcmbO4Zu3aC2aj39Zl55NjHhcxRZWt1Ju7
      fecazv59pKCWgvJmwDMEqWz0H9aIkswH35RSWNHCidIG6s3dnKn3rNpnFddz+GSvpWt1cydV
      TR1++b3WrB3dDo4V1SH1W2vpsjlRFAWL1cHxUs8iXv8hTUe3g/zyJk7XtdN+dkhUXNWKtcfz
      Jn33UDEnzuY9Xlo/pLl5QAAmmCnx8fx008Zh11Oampo4VH4anSCwKiPjArbOw5HCWkqqWymt
      MdPY1ruq7BWA0hoz5Wef2Kfr2nxPXVHy76gK8N7XJX7fZZ/yzGVqWzoHmECLkkx+eTMF5c3Y
      nW4O51ez/0Q5xVWt1DR3Dii/b3l9OV3bRl1rF3lnmqloaMds8bzJPs86g+2sAMiygt3pptVi
      57VP83zX05+LqgX6PjIaM4fOzk5cLa2sXbnqgodWOlXbRkVDh9+QxOES+a7E/ym5+2ARK+Yl
      8sWJCgDyTjdxOL+axzZf4VeeudOOVqOmy+bEYnUA0NxhpaPbQevZjllW24YpWMfjfzvA6bo2
      FAVqW7p8Zew6UEiLxU64KYjVCwYOBZs7/E0/Wiw2uu29c6b/8+YRXvi3GzF32fn42Cm67S5y
      TnsmzIfzPW+jL46XM3MQdyrnxS9QgOERRRFRkvw2Gp3ve+91zpVVXMunvKDo+AAAIABJREFU
      35b7nUuIMnk6qwA3rJjFR0fKAEiKDcVsseNwieh1apwuiSnRIVisDuxnJ8VqtYCAQGRoMOEm
      Padq2zEEaQk3BfneKN50AJLk6W56nZppcWFUN3fidJ2dbwgwPyWWwooWFqTGUlDhMdU2BmlR
      8AzH0pKjqGjowC163haxEUZaOmzERRrp6HYQbgqi0+boLbPPNf746vnEhPcOTc+bY6yLifeH
      noxqVS9ut3vAYt+FEADwhLEdy74JSXQjqDSoVBd/ZX44JNENKg3qYdqp1Wr97vuEhUmdTAiC
      MKk7P4DZbCYhIWHkhBOId1im0+nG5MirxdxEUGQiofrJ3VVa25rQhSdiGKadgykaApPgi0BC
      QgIOh+OiRGrxrrj3Peqqz2B3KQO+V6vVyLIEZx8q/Q9zQyXtNnHQc5bmGlq6nIOeqyg/hSgz
      6LmayjM4xD5tUQmUlxVx8uRJjhz91v9cn0MZpp3eY9DNTCMNgSbCI1yAkbmYw8/WpnpMkfEE
      6/zDvrpdLjRa3ZDDH7fLiaDWohnEPFt0O1EELVrNwHNOhwOtXj9onDOn04FWqx+0zpaqUuTI
      VOJDByoOZLcDh6zFoB/923+Ab9AAlyfGkDC06j4dTlE4VZhHeUUl2SeOY3cP/qbqam+h2zG4
      abLVYqbTPvjqdnNzI6I0eJnmliacYp85iiJTcaqYwsJCGjvdhBsGH+K4upqoax+7s4ARB3aB
      J//3FEWmpDAft6IClYbZs9Poa9/WIwksSJ+NubqEDpsLQ3ivxqq4qIi589KJiu+jspQlys+U
      YXf2al+SU3tDs7a3t+O0WTBbbKDWMcXbrUQHhSVltHdYCQ8PoctqJzLeXxVqbu9i8bLlaPu9
      aRqqyzF3elbcZbeD+Blj37fxvdMCXapc8HsvixSUnGZB+uD7vjvNTVQ3tBBkCmdWarKfOXVJ
      zlFaXTriIkJImjYDY1Dvc1SRJZqbWzCFhmEw+Idztff0YAgOxunoQaML6tXYSE5yiyvIWDCX
      +vJiguNmEWXSegvkVGEuZrtCaIiRGTNn+w3VzoXAEOhyRXRSUlqG026lsLCQwuJSHGdXe5Fc
      lBYXUdPY6gkibu/G3s8Ni94UhlEr0G21IvYzUSjKz8Xc0kBLQw2VfWKZiW4XJaWlOBw9lJUU
      0ePuM8xR64gP05Ofn0+nW0eEse/ARCAsIhJRgdiIUL/toF7XmH2PsTK5dVsBzg8aPXPnzqPi
      dAmNrRZUanWvBwW1jjnz5tHeXE9tUxvaYCPB/XaHTUtNY6qiYK45RY8EYX3OCQK43C6aWl1M
      j5nu+97a2UGP3U5tbR2xU2dg7DNZtVlt6IJNxOkMIKiQZQWVd06iSDS0WYkKDQa3ldYuF4kR
      nuFYh8VCV1sz3T1uEFSkzkzzexuN6laMKXWA7w+ym26XipDQEOJCdVgdMsHefQYK1DS1sWjh
      ItpqSmiwOEmK6J0DNNZV0WV34bJ1Eh/j/9SdljoLh8OJogiEhfRqa8Kj40juslBeU4+62UzU
      qhW+Mb1Go/Fsd0QAQeU/7xTURBo1nK5uxBUdy/yk3jIjIyKoKi9nUeZS1OOcqgYE4HJFpWXq
      lFjc9i4a2rpJT/LvCiYt5J3Mw+1ysyCxt9NZrVamTE0h0ulCr1Hokf1H0eUV1SxatBBnWxXl
      TTrmJva+Hyw2FxEREYQEa3CKCl55+2rfRwjGaEIMwQhqHSGh4ajPjvNryktp67IzY84CUhJj
      6I9JJ/PN0SyiwkNImTkb4xgX7AICcJlSX32GZosTk17B6RLp+9A1t7Uxc94iALo7zH7nKquq
      WDBnJuU1dcyL11NtDSe9T9TKmPBgcnPzkCSZ9EX+2zxTU6bT09VBc5eTYG2v4Fxz/c3U1tZi
      63GiN4T47IYALD0SS5YsIb+wCPoJgM1qZdaCZcR1tNJhk4ZdBR6Ky3oS7I3Vey6TqEuVtm4H
      86ZH0SUbSI0zYO7q1dk39NmeKfd00NTh8H22dbaRX1hMVWUlhaVn/LRDne2tiIKeqKhIYmOj
      B/hUMplCiJmSTKgev4m1SqMlSKcFRaHHbvPfyOK2k59fQEebp96ePkZuZ8rLUWQXpWdq0Dha
      abCMfVfdJfkGkCQJt9uNIAjodLpRr1X0X9VWFAWbzeb7rNVqfeV5ne32L79vtBqvX3+vq8NL
      iZ7udk5V2GjrFBEtMtPn98ZCiDLpyMsvIsSgo6W1g8wVs3znVl7pCdG0cJBtDCqV2s8Oq++v
      Ym6qpaHFY4LdYekkMiHFd+7rfXuQgmOIiQgBleD3IFq4ZPmQ1xCkhqL8fOKSZ6G11yONw2Dv
      kloH8HY6h8OB0+nZY2o0GkclBLIsY7PZfHF6vU/+/paR3qgvbrcbRVHQaDTo9Xo/J1I6nQ63
      2+2LVSUIAhqNBp1O5/OzM9YFxMl17xVcDgc9LpGQENOgJguTAUUWsfW4MBoNOB0O9EFBY3JD
      dsmYQ3uHKg6HA0mSBgRJ8z6BvYZe3o7ozSuKIjab7YIFiDOZTP3NbkfMM1nv/feZSWkO7R2L
      e23mBUHAbrf7nviD0V8oRFFEpVIRHByMKIp0d3cPmfd8YLVafULpDeZ3KQen+z5zXgXAO0bu
      Pz5WFAWXy+X35Pbicrmw2+2+4UdQUJAvkMRo6Zt+OME5n/QVSrfbjU6n84sLFmByMKEC4B1T
      e8fLLpcLSZJ8E6O+mpa+wxGvvXb/KC+iKGK1Du0KfCQcDsfIiS4AiqLgdHo8Hej1ep9tekAY
      Lj4TKgBOp5Oenp4B6sSRvPkONq7/PuJyuXC5XL5h0Vg0WAHODxOiu/OO2S/WLqdLDa/69UK4
      JQ8wPH5vAG9HHguSJPmebAFGjyAIyLLsu98XSkMVwB8/NehIAZsDnF96F5EUqisqSJw+A40K
      bJYWOpxaTCobBaWecKMJyTOZkexx2ltVVcW0adMCw6kxMmA/wGAbpgPHhTt6Ufj8g/ewSyA6
      unn176+jNxgozzlIQXU7ggDH9u5m50dfA/DJZ59wEUInfy+YdOsAAfqi8MEb27nypi3EhOip
      AeYszGT1wiRWX3kFf/zjn4F1A3J1NJbz951v45YFUhas5I4bV7P7jff44Zbb0QDvvvUGN9++
      hYMfvUF1q5X21hbCEqajd3dR39TK8g0/4rpVc9j+/PM4BBWtre3MSp9Pa30tbR1d3P3wL5kR
      o2HHy6/SYLGi0hq598GHiFF38cYXeURJTdT2hJOgaWP+hjuYFhlM05kT5Dbq2Lhm4YW+icMS
      EIBJir2zkT8+/QRx867mR7N6g1w47Ha6u7uoKv6OoOjUQfMWZh1l/lW3sD5jJqIkAQrtbb0h
      Z9vb2lCATksnV1x3G/OmRvLcM7/n9m3/QYS+h7/+bQ/XrZqDxerinkcfxehs4fd//5T/fHQb
      lvIsvswtZcb1mdx2970oioL5zHH2Hc7lJ2uSOfLFR/z43p9z7+LZtJafYM/+w9x/+waOHslm
      yaa7z/NdGzuXlgXXZYQhLIFf/Oo/sVbl0G7tVTAc/PQddux4nfJ2NfdsuWnQvMuvvZG2oq95
      9tln2PPlt0MPjzQ6osJCEFRqQsLCCTEEodJqUZ/NEGwIwRisR6PREhEVjU6jRqfXI0kiTms7
      f3v+L7z22mt88PkhrDbPes2MxatZtyQNlSAQm5qBs7EEq8NOo01NctTwAUMuBoE3wCRGrQ9j
      652b2P76m/zi4Z8CsPG2n3L1wqRh84mCnju3PgSKxP974a84xdUosoSsgCy7fB6Uz4W6shxm
      XHErN6+eQ3PJET4q8rgk8bOBUmlZNT+Jd97aRfKi1ZPyaRsQgEmJgCkkBJUAMcnzuCa9gn3H
      ipgaZBw0PJLJaPKzgqwpPs4H+4+BojAzYw1BGjVzU8P4w+9+R2hIGD2Kp5MaDEafAyqjyVuG
      CpPJ4P+doMJk9Lh7V6l1GIIVps7J5IP/+yLPHA0iLsKIMXEhqNSYDP5u4TPWbODVbY/zzF33
      TuwtmiD81KDnk6amRmLj4s+7aa3kdtDQ3MHUpAvrezPAQBRFwdJ4mne+LOaBu2692M0ZwABr
      0Pb6Ml55/T1sna20unRMjQlj/U2bWTk/ZagyRs2HH77PPfc9jE4z8QLw8it/44H7HwQ8NuId
      nV0BAZgEmKsK+MeeY/xk679e7KYMiZ8ARCam8avHH6eh8CuOtkVz27r5AORn5zArfTaH9u1l
      8fqbMYkdfLH/S4Kik7l6zUo0iOSezEdxdlNa1cL66zaSGB2K5HZw7OsvqWrupq61069iSXRy
      7KsD1LTZWXf1BqZEmTiRk8vSpUsRgPKik0SlziNYsfPlF/txasPYcM1VGHUqsvPymZOSwP6v
      jhMRpiH7RDY67Q6mz1vCmoyZHoeuQElBDggqcvKKWHzFWsS2agrONHDND24gPtKEzdLCvi++
      JCgqmWvWrkQ3iB/LAOMnJmUh//bo5FJ79mdUv/jxI4f5x84dhE+dS5jWzfbtO5m1aDlhcgvv
      fn4ERXSy+43X6VJMrMqYwVvvfgwofPTPv2NRRXLVmpXo/GpS+PSt7VjUUaxaMpedL/+NTqdE
      4XdHaLOLIIsc/OZbgjQCu3a8RlRKOjNitOzcvQdFkTm472N2/PM90hZmsGDRUqanTGfDhg0s
      mD0d2dXDt9meMJ7ZR/aTc6aV1Vcu47U/PUuLU8fy9Kns/nAvstvO9td2MjtjORFKC+98fmTC
      b26Ayc/oJsEuG1dt/jmzYkPpbiyktl2krDAPFDelp06iXJvB9HmLufrKZeDuRnu4GNllo0UO
      4cGrViAIArFRve4xFFmi0iKxbcsKBAFuuKKE/Ip2Vi+dQ1buKdakqtFFp6KROzlV0UxIXDGg
      UHu6BKd8E26nzJZH7yc82DOZCzGZmDLFoysXbb36bk1wKNdcu54YE8ycNY+rVi9H4+rg828r
      6WqpoLFDpKwgDxApK8mFTWsm7MYGuDQYnQDow0iK9bi+EFRqwqNiSU9PB2DJ8tAh92FKogiD
      nhVQyRKSAhoB7DYHukQ1qTNWsG/HhwQ1q1h+xS0gyBjDIn11LVy8DJ0Apug4X+cHGM8s3nMd
      Mb6yFy8LdP7LkTGrQY3RMwiT3iWnsBSTWqRTMrL5xisHpFNpDSTobbz6z7eJDpbJP90bz1VQ
      qVialsCLr+wgJc5IXpmF/3FdFGqtQIzOTlaNwH/+SygCMjPitRw5kU9CmJ769h6m/eRHA+oy
      SFbe/vATUmfMZlFK1KiuIzQ2FaP4HrmFZZjUbjokIylTAxPny41B1aBOm4Uut9YXUKyxrp7Y
      pES8GmhZcnO6tASXEMSctJloBJmGZjOJCfEgi9Q1mUmaEo+iSJSXloAhkmCtQkLClD5qUIWm
      2kqaLQ7mzp3jm4BaO1pocwhMS/A4QVJkicozZXQ5FNLmpBGsVVPX0EhSYq95gOTqoai4lKgp
      05gSFUJjaztT4uNoaWogPCYBnRoa6hpJSJqCILupa2onaUrc2esoxSXomZM2c4D77QDfbwZ4
      hQgQ4HIi4B49wGVPQAACXNYEBCDAZc1FEYC++1/Huxd2PPnGk2e8TnMDe3wvDS6KAPTtUJeC
      AFyougJceAJDoAlAURTcooTN4Qo4FbjECOwHOAcURaGwspWPjpRh7rTjFiWuXpzCD9fNRTm7
      Ai5KMg6XiCl4YHDnicbhcKBSqdDpJr6uzs5OampqEEWRqKgokpKSxu0S3ul0+lzbjwVRFGlo
      aMBsNhMUFMTUqVMJCQkZVxu8BARgHMiyQnOHlS9OVJB3pon7blzCtLgwZFnhf77yJSaDjs+y
      ziDJMtLZgNBzp0WzLmMac5Kj0WomJsynF5fLxVtvvcWuXbvYtGkTP/vZzyasbLPZzAsvvMDB
      gwd9Toa1Wi3Lli3jN7/5DTExA8MWDdfO3bt3s2vXLn7wgx+wbdu2UeVTFIXDhw/z0ksvUVFR
      4YsNERISwvXXX88jjzyCyWQa1/UFBKAPiqLQ1taGSqUiMjJy0DSl1WZe33sSp1ti/eLp/O7+
      qwnW99ol3bMxgzf2F/DIrUuJCTeiEgSC9RqOFtbyybHTvHmgkF/deSXhpnN3he5wONi/fz+v
      vPIKdXV1wMQ6A66vr2fbtm3U1NSwePFi1qxZQ3BwMIWFhRw4cID77ruPF154gaSk4bdoOp1O
      Xztra2vH1E5FUdi1axd/+tOf0Ov13HzzzcycOZOuri4OHDjA7t27OXnyJM8//zzh4eFjv0jl
      HDA31SlfHjqsuCVFMTdUKd+dyFZyCkoVZ1ercuzb40rWiVzF7XYo3x09qhw9+q1id0mKoiiK
      KIq+Mtxu97jqHk++kfLs27dPWXDlDcrCK65Tjhw5oiiKokiyrBRVtig7951U3txfoPzsjx8r
      RZUtiluUhq5HlAatS5ZlZf+JcuXRP3+m7P3ujCJKQ5cxHC6XS9m7d69yxx13KJmZmcratWuV
      p556SsnMzFSee+65cZXZH6fTqTz44IPK0qVLlZdfftnvemRZVt5//31l2bJlytatWxWHwzFo
      GW63W9m3b59y5513KpmZmcq6det87Xz22WdH1Y68vDxlxYoVyoYNG5TS0lK/cz09Pcqzzz6r
      ZGZmKk888cSYrxHOcRIcEZNAQnQYigJ1DWYylixG57JSVF7HgsWLiTNpqKkoJWTaAjJnx3G6
      vsOnVpRl2eeJzvu31e7iP178gqomi9/33nT9j77nR3N48yiKgt3hpu3suN3pFjmcX8Mf/rKD
      +MWbiF10Izt3vUurxcZzu4+xc18+MWEG9DoNT91zFXOSo1AJDFmPSmDQ9imKwvrF03nsjlV0
      2ZzYelwDzo+GJ598kieeeIKmpibuuusu3nvvPbZu3XouP+UADh06RHZ2NuvXr+e+++5Do+kd
      LAiCwC233MLGjRspKCjg888/H7SM3/72tzzxxBPU19ezZcsW3nnnHe6+e/SuUURR5LnnngPg
      6aefJi0tze98UFAQ27ZtIyMjgy+++ILs7OwxX+c5DYFUKhW9pm3C2X8gAyoBVAi4ZdkXA6B/
      RwZ/PfsH35Si16rZuTefJ+7ytzB1ixKlNW2YO+1kzIwj1KAbs8bFW5fd4ebfn99HeEgQOo0a
      m8NNYnQI99x1G8/++W+oBIXlP9zM0zu+ZuOKmWxYNgO1SvArY7R1DcaUaBM/Wjd3QKcfrWtD
      q9XK5s2bufvuu4mLiwPAZrONkGv0KIrCu+++i0aj4cEHHxy0XYIg8Mgjj7B3717ee+89Nm3a
      1M+7nadNt99+Oz/96U+Jj48HGFOwklOnTlFSUsIVV1zBsmXLBk2j1+u5//772bZtG3v27CEz
      M3MMV3qOAtBUV0llVTVOwUBcTAg52TkIaj3p06I8fwsCSxfP43hWLmYBFixbiUql8gWWA3wB
      NEprzBwvbeDp+9bzzBtHyDnVxNI5U5AVheyyRt75qpiYCCOx4QbeP1zKI7cuY9700U/AvHWp
      1WqKqppYPCueh29ZSkVDB1qtmqkxoQiCwKYN61CpVISFhSFJMsLZp7nXbGosAfn6d4j+jHR+
      KJ5++mlCQ0PPmy9Qh8NBQUEB6enppKYO7nwLIDY2loyMDLKzs7FYLERF+ZuiP/nkk4SEhIy7
      nceOHUOSJK6//vphNU7Lli0jNjaW48ePY7fbMRhG73/onAQgPimF65N6N8wn9AkLe+XKXtv6
      K9cM3C/Ql6LKVl75JIdf3LaCUKOeh27O5Lm3v+VATiXmTjtRoQZ+cfsKEqM9m3JWL0jmpY+y
      eebha8d1c7OK68hMS0AQBGYk+k92IyIifH+r1apJuaAVFhY2cqJzoKSkBKfTSUZGxrAdTxAE
      MjMzOXHiBCUlJaxevdrvfGho6BA5R0dZWRkajYaMjEFCUvZBrVazZMkS9u7di9lsJjk5edj0
      fZkUWqCk2FCe3LqOiBCPT5nkuDD+6/71nK5rJz7CRGxEr/8agJSECBSgtqWL5LixdQa3KHGm
      vp37b1oykZfwvcKrqZk+ffqIaVNSUvzyTBSSJFFdXY3RaByVqnX69OnIskx9ff3ECsDJbz5j
      79dZRE9JZerC1WxYMvQrcbwMphI0BunImBk/aHqVSmD1gmS+KahhS9yCYct2uSU+PFLGidIG
      /u32FXRYnYQY9ATrJoXsT0rMZjMA0dHRI6b1dk5vnonC6XTS1dVFdHT0qBbcxtuOEXtBeXkl
      y5YvJafgDDGOyRMEY11GMv/r1a+4ekkK8ZG9iyBOl0hrpx2nS8TcaefDI2UkxYRy7dJUnnnj
      CC5R5oFNSwK+9Iehp8fj5nA0q6zeBaiJjsTpDbwy2vG8d7hlt9vHVM+IAvCDW3/MwYMHmTVn
      EddkzhxT4ecTU5CWO65O5+kdX7Pl2vlcMX8qxVWt/P3TPIL1Ggx6LcZgLXesT2fhjDgEQWBq
      TChRYcG+rZ4BBsc77xnLQ+JiP1C82rSxtmNEAag4VUxHt4P6nM/RxyTzg6UzxtfC88CVC5KZ
      Oy2GZ974hk+/PYNaJfDQzZnMnjr4xvhZSRHj1rxcTnifuqN5mnpXdCc6yLdGo0Gv1496xdgb
      TXSs7RhRACKi45gxQ4NB6qDb1jOmwi8EkaHB/OZf19HSYWNaXBjqYTa2j3Xd4HLFO5zo6OgY
      Ma13zN1fBXquaLVajEYj7e3tIycGLBYLMHYN2bAC4HI6kGSPPnvaonXMm5c2XPKLhilYd0Gs
      LS8XvFqU8vLyEdNWVVUBjGgPNFY0Gg1xcXHU1dVhsVhGtPOprKxEEAQSExPHVM+w0+usQ3s5
      dOQ7ysrKKC44SWV925gKD3BpkpaWhiAIlJaWDvvWVBSFkydPIgjCsAtm42Xu3Lm43W5KS0uH
      TSfLMiUlJURERPhWnEfLsAKw5rpb2HLHj5g/dw5paWlEhE6+CB8BJp7w8HBmzZpFdnY2nZ2d
      Q6azWq1kZWUxffr0CX8DAKxcuRJBENi3b9+wglhZWUlVVRVz5szBaBybgmNEBev7//w7nx/L
      paowi9K60Y3HAlzaCILAjTfeiMPh4LXXXhsy3a5du3A4HGzcuNHPWG6iWLhwIYmJiRw4cGDI
      hTZJkti+fTuiKHLrrbeOWQs0ogDExMRzxcLZNLR14hpjEO0Ak5eWlhZeeuklduzYMej5m266
      icTERN5++22OHBnoOTs3N5fXX3+d+Ph4br31/AS/0Gq1PPjgg9hsNp566qlBDf4+++wz9u3b
      R3p6OmvXrh1zHcN6hivOPkxxXRfLly8jMtSEwRA8IRFeJEnyqSNFURzX02M8+caTx2uxOVb1
      6XivaySys7M5fPjwgO+tVisffPABc+fOHWARaTQaeeCBB/y+e/XVV3nxxReJjo4e0pw5Ly+P
      X/7yl7hcLjZv3syaNWsIDQ0lNzeXnTt3Yjab+e///m9WrVo1IG9ubi6HDh0a8H13dzcffvgh
      aWlpAyw8g4ODeeihh/y+kySJp59+mo8//pjU1FS2bt1KWloa3d3d7Nmzh48//piIiAief/55
      ZswYm4p+RNeIiiLTWFNJdk4OFRWVrLzhTlbMnTqmSgYjIADj54033uDFF18cU57w8HD27Nnj
      ++xyubj99tupr6/nscceY/PmzUPmPX78OH/4wx+oqanx+z4hIYFf//rXAwzgvOzevZu//OUv
      Y2qnyWTis88+G/C9y+XipZde4s0338Tl6rVGEASBBQsW8PjjjzNr1qwx1XU2//AC0FJfSW1T
      O7UVpVglPeuu3sDU2HO3RAwIwPjp6enxmSqMFkEQ/Kxcs7Ky+PnPf87ixYv561//OuLmdLvd
      TlZWFuXl5YiiSEJCAmvXrvUrsz8Oh2PMZgn929mfxsZGjh49SktLC0FBQaSnp5ORkTFuJwAj
      CoAoiqg1miH9/4+XgABcPBRF4de//jVZWVls377dZ815OTIgSF5/xvIDttaVU9HURXhEFClx
      RnKLK1FpdCxeNIe8EzmIioqMpUsJCsThuqg0Nzdz7Ngx7r333su683sZtoefPPghlsgMTnz8
      Eja7yJofP8L6RdMHTdvR0YagCiIqKpKKijOkZyymraKE2opSTFPTSdGZOVXXwfxpkUNuiRwL
      48k33jx9/z+fdcH5Nyo7fPgwaWlpbNmy5bzWc6kwrAB0WDpQx2q58bZ/BXMp+e1dQ6advWA5
      iiyT/W0WKmMwasFjt++SRNRqNWq1Gknq3RMsSZ5Ijn3/HgvjyTfePH3/P591XQhDvU2bNnHL
      LbecF+dZlyLDzgF6Opt48aXtCFo9DknFgw8/TJRJP2jahppyzBYbth6R+TPjyT/dgIBC5uJ5
      HP8uF5UA85etIlSvDswBAkwKRpwEux02eiQ1atFKaWUTCxfMGzKMUH/vBr322eA7JXi8RgQE
      IMBkYMRJcNa+91BS15L1/mukpCTQKgZx/dLBN8X0H7v2/RzYfBVgsjKsSsYUYiLn0Cfopi5i
      TnIsPZNoS2SAABPBsG+AmJR5rAlLwRARjcHZwuygid30ECDAxWbYN8DJrEOogw188PlB1O4u
      sktrhkseIMAlx7ACoNdp2fvJHmpPFfDuZ1/7eUEOEOD7wLBaIFmWkOXe0yqV2s9B1XgJaIHG
      T0tTE2HhJixWkbjocbgDD+BjxDjBKpUajUbjOyai8wcYGbezie07PkZ0u3G5nLjcIoqi4HT0
      sOftd+l22GmzWFFkmZ6eHmRZxunowely47J38fKrr+F0uZElkR6HwxPCye3G5fKEcDpzfC+/
      ePLPyIqNf/zjA185oiQjiaKnTpcbh6MHSVb6lHOx78zEE1BUT0YUGafTzb43X6bUqtBpkbj7
      xsXs/OgbWhvb2dBRS06xk4rjn1LaaGfTjRvZ/8U+GttsbL7xSo4dPULSrPk05O6nzS4xf+1N
      1GR9jEOI4YFfPoAkupkereNYcR0ul4v603m8+9lXyIYEViXKfFlmpqW2hmlxIUxZshGp+ltq
      WiysuOEu1i+ePG5xJoKAZdqkxsBPHniY5AiBgoJi7nn0V6yY37uFg3+LAAABn0lEQVT5vKrN
      yWP//ksSw9TEJc0gOlhNZOp8lq9cxca1c+hRTeE/HvsZ5flFaIMieXDb/RjPLsrMXb6e0ycO
      ISlgsXQzZ2EmTlsboOfWn2xl4YL5/GzrHXS1NVFttnLl6pVYJ9j94WQgIACTEUGNwRCE3mBA
      JYDBaGRhRgav/PH3FFW3oFZrCQ7SkZEaw9O//9/kn64jL/s45i4HWq0OyVLLhweKiTN18dvf
      /YXM1SsJi4xCd9YSV6MNIjjYREZqHGaHRFdHMydOZCOhRqcPRqsSMBgMCGoNxtAw5k2N5vDR
      XAxh44vDNZkZdhJ8vghMggNMBkY0hZgIFEWhtbEGm6RjelL8RfcheSnQ0tIypLNZg8FAfHzg
      Pk4U530IJNpaqG4TUduaqLc4znd13wtaW1sJDg4e9Dh58mTAxeMEct4FwNrWQmR8ElOnxNLU
      OrSTpQC9hISEMGXKlEEPr8tyyd7OgcPHz7muU6eG97oGMrk5eaMuT1FkDu77hOqmIXxISQ5y
      8opH38Cz5OTkogCitZUzDUP7p8rNy0EewwPi/wM9phBR7HppiwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='137' name='KPI summary' width='192'>
      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
      DQQAovkfzsyZs5GD4wsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map view' width='192'>
      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
      3j8G/j85Kqsq6HGORwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trend overtime' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='pie chart' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
